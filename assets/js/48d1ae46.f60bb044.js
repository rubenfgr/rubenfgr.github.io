"use strict";(self.webpackChunkruben_rosales_web=self.webpackChunkruben_rosales_web||[]).push([[5244],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>k});var l=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,l,r=function(e,a){if(null==e)return{};var t,l,r={},n=Object.keys(e);for(l=0;l<n.length;l++)t=n[l],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)t=n[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=l.createContext({}),u=function(e){var a=l.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},m=function(e){var a=u(e.components);return l.createElement(s.Provider,{value:a},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},g=l.forwardRef((function(e,a){var t=e.components,r=e.mdxType,n=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=u(t),g=r,k=p["".concat(s,".").concat(g)]||p[g]||c[g]||n;return t?l.createElement(k,o(o({ref:a},m),{},{components:t})):l.createElement(k,o({ref:a},m))}));function k(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var n=t.length,o=new Array(n);o[0]=g;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var u=2;u<n;u++)o[u]=t[u];return l.createElement.apply(null,o)}return l.createElement.apply(null,t)}g.displayName="MDXCreateElement"},8393:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>n,metadata:()=>i,toc:()=>u});var l=t(7462),r=(t(7294),t(3905));const n={title:"Referencia",sidebar_position:1},o=void 0,i={unversionedId:"git/referencia",id:"git/referencia",title:"Referencia",description:"DASH Y DOBLE DASH (- / --)",source:"@site/docs/git/referencia.mdx",sourceDirName:"git",slug:"/git/referencia",permalink:"/docs/git/referencia",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/git/referencia.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Referencia",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Git",permalink:"/docs/category/git"},next:{title:"Consejos",permalink:"/docs/git/consejos"}},s={},u=[{value:"DASH Y DOBLE DASH (- / --)",id:"dash-y-doble-dash------",level:2},{value:"BUENAS PR\xc1CTICAS",id:"buenas-pr\xe1cticas",level:2},{value:"CONFIGURACI\xd3N",id:"configuraci\xf3n",level:2},{value:"AUTO-IDENTIFICACI\xd3N",id:"auto-identificaci\xf3n",level:2},{value:"STATUS Y LOG",id:"status-y-log",level:2},{value:"MODIFICACI\xd3N Y ELIMINACI\xd3N",id:"modificaci\xf3n-y-eliminaci\xf3n",level:2},{value:"IGNORAR ARCHIVOS Y DIRECTORIOS",id:"ignorar-archivos-y-directorios",level:2},{value:"STAGGING",id:"stagging",level:2},{value:"COMMIT",id:"commit",level:2},{value:"REMOTO",id:"remoto",level:2},{value:"BRANCHS",id:"branchs",level:2},{value:"TAG &amp; RELEASE",id:"tag--release",level:2},{value:"VERSIONADO",id:"versionado",level:2},{value:"ISSUES",id:"issues",level:2},{value:"STASH WIP - Working In Progress",id:"stash-wip---working-in-progress",level:2},{value:"REBASE",id:"rebase",level:2},{value:"GIT CHERRY-PICK",id:"git-cherry-pick",level:2},{value:"COMANDOS \xdaTILES",id:"comandos-\xfatiles",level:2},{value:"ALIAS",id:"alias",level:2},{value:"SSH",id:"ssh",level:2},{value:"ERRORES COMUNES",id:"errores-comunes",level:2}],m={toc:u},p="wrapper";function c(e){let{components:a,...t}=e;return(0,r.kt)(p,(0,l.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"dash-y-doble-dash------"},"DASH Y DOBLE DASH (- / --)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"- Una sola letra\n-- Una palabr\n")),(0,r.kt)("h2",{id:"buenas-pr\xe1cticas"},"BUENAS PR\xc1CTICAS"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Realizar un fetch o pull antes de un push al repositorio"))),(0,r.kt)("h2",{id:"configuraci\xf3n"},"CONFIGURACI\xd3N"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Configurar el usuario"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git config --global user.name "RubenFGR"\n\ngit config --global user.email "rubenfgr87@outlook.com"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Editar estos par\xe1metros desde el archivo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git config --global -e\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Listar la configuraci\xf3n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git config -l\n")),(0,r.kt)("h2",{id:"auto-identificaci\xf3n"},"AUTO-IDENTIFICACI\xd3N"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Evitar que git solicite el usuario y contrase\xf1a cada vez"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git config --global credential.helper store\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Lo mismo que el anterior mantendiendolo en memoria un tiempo limitado por seguridad"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git config --global credential.helper 'cache --timeout=3600'\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Eliminar esta configuraci\xf3n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo rm ~/.git-credentials\n")),(0,r.kt)("h2",{id:"status-y-log"},"STATUS Y LOG"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver todo el historial de la l\xednea de tiempo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git reflog\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver los \xfaltimos cambios despu\xe9s del \xfaltimo commit"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git diff\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver los cambios en el escenario"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git diff --staged\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver diferencias entre dos ramas"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git diff "rama-uno" "rama-dos"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver el estado actual del repositorio"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git status\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ver el estado actual del repositorio en formato corto"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git status -s\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ver el estado actual del repositorio en formato corto y ramas"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git status -s -b\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver todos los cambios del repositorio (commits)"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git log\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver los commits realizados a una l\xednea (hash corto y mensaje)"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git log --oneline\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver los commits realizados de forma gr\xe1fica a una l\xednea y decorados"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git log --graph --oneline --decorate --all\n")),(0,r.kt)("h2",{id:"modificaci\xf3n-y-eliminaci\xf3n"},"MODIFICACI\xd3N Y ELIMINACI\xd3N"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Modificar el nombre de alg\xfan archivo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git mv "nombreArchivoAntiguo" "nombreArchivoNuevo"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Eliminar un archivo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git rm "nombreArchivo"\n')),(0,r.kt)("h2",{id:"ignorar-archivos-y-directorios"},"IGNORAR ARCHIVOS Y DIRECTORIOS"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Crear el fichero .gitignore en el ra\xedz"),(0,r.kt)("li",{parentName:"ol"},"Ignorar directorio ",(0,r.kt)("inlineCode",{parentName:"li"},".directorio/")),(0,r.kt)("li",{parentName:"ol"},"Ignorar fichero ",(0,r.kt)("inlineCode",{parentName:"li"},".fichero.txt")),(0,r.kt)("li",{parentName:"ol"},"Ignorar varios por extension ",(0,r.kt)("inlineCode",{parentName:"li"},"*.txt"))),(0,r.kt)("p",null,'" Ignorar directorios o ficheros que ya estaban rastreados por git'),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Agregar los ficheros o directorios al .gitignore"),(0,r.kt)("li",{parentName:"ol"},"Limpiar toda la cache de rastreo ",(0,r.kt)("inlineCode",{parentName:"li"},"git rm -r --cached .")),(0,r.kt)("li",{parentName:"ol"},"Limpiar un fichero o directorio concreto de la cache de rastreo ",(0,r.kt)("inlineCode",{parentName:"li"},"git rm --cached .fichero.txt")),(0,r.kt)("li",{parentName:"ol"},"Agregar los cambios al escenario ",(0,r.kt)("inlineCode",{parentName:"li"},"git add .")),(0,r.kt)("li",{parentName:"ol"},"Subir los cambios ",(0,r.kt)("inlineCode",{parentName:"li"},'git push origin "rama"'))),(0,r.kt)("h2",{id:"stagging"},"STAGGING"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Agrega todos los archivos modificados al escenario"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git add .\n\ngit add --all\n\ngit add -- .\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Agregar los archivos dentro de la carpeta al escenario"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git add carpeta/\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Agregar todos los archivos del directorio actual .png"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git add \\*.png\n\ngit add carpeta/\\*.pdf\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Agrega todo jerarquicamente al escenario"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git add -A\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Agregar todos los archivo .txt del proyecto al escenario"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git add "\\*.txt"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Agregar la lista de archivo al escenario"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git add "lista de archivos"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Agregar todo con actualizaci\xf3n (-u (update))"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git add -u\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Eliminar del escenario"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git reset "nombreFichero | nombreCarpeta"\n\ngit reset HEAD "nombreFichero"\n')),(0,r.kt)("h2",{id:"commit"},"COMMIT"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Los commits se pueden referenciar en GitHub a trav\xe9s de su Hash"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"HEAD apunta al \xfaltimo commit realizado"),(0,r.kt)("li",{parentName:"ul"},"HEAD^ apunta al pen\xfaltimo commit realizado"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Agregar archivos al escenario y realizar el commit"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git commit -am "mensaje"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Modificar el \xfaltimo commit y cambiar el mensaje"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git commit --amend -m "nuevo mensaje"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Deshacer un commit sin borrar los archivos (s\xf3lo \xfaltimo commit), reset tiene 3 niveles de borrado, el siguiente es el m\xe1s debil"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git reset --soft HEAD~1\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Moverse a un punto de la historia (commit) con su hash guardando los cambios superiores"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git reset --mixed "hash"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Moverse a un commit con eliminando todo lo superior a el"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git reset --hard "hash"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Vuelve el estado del repositorio al \xfaltimo commit"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git checkout -- .\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Vuelve un archivo al estado que tenia en el \xfaltimo commit"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git checkout -- "nombre-archivo"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Vuelve un archivo a su estado en un commit espec\xedfico"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git checkout "id-commit" "nombre-archivo"\n')),(0,r.kt)("h2",{id:"remoto"},"REMOTO"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Agregar un repositorio remoto en la ubicaci\xf3n actual"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git remote add origin "url-repositorio"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver cambios de un repositorio principal sin ser colaboradores"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git remote add upstream "repo original"\n\ngit fetch upstream\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Revisar las fuentes remotas agregadas al repositorio, los repositorios remotos para push y fetch pueden ser distintos"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git remote -v\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Clonar el repositorio en el directorio actual"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git clone "url-repositorio"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Clonar y poner nombre al directorio"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git clone "url-repositorio" "nombre-repositorio"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Subir los cambios a remoto"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git push origin master\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Enviar cambios al repositorio remoto, -u Ayuda a que la pr\xf3xima vez que queramos hacer push NO necesitemos especificar la rama"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git push -u origin master\n")),(0,r.kt)("h2",{id:"branchs"},"BRANCHS"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver las ramas actuales"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git branch\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver todas las ramas, incluidas las remotas"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git branch -a\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Agregar una rama nueva"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git branch "nombre-rama"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cambiar de rama"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git checkout "nombre-rama"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cambiar de rama creandola porque no existe"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git checkout -b "nombre-rama-nueva"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Fusionar ramas integrando codigo de una rama dentro de otra, colocarse en la rama donde se desean fusionar los cambios"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git merge "nombre-rama-a-fusionar"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Limpiar ramas que ya est\xe1n funsionadas y no sirven para nada"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git branch -d "nombre-rama"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"El -d no siempre funciona ya que comprueba que no siempre vallas a perder trabajo, es decir, que los commit de la rama a eliminar est\xe9n en master. Para obligar el borrado de la rama se utiliza -D (en may\xfascula)"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git branch -D "nombre-rama"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Eliminar una rama remota despues de comprobar con branch -a"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git push origin :"nombre-rama"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},'Eliminar ramas de seguimiento remoto obsoletas en "nombre"'))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git remote prune "nombre-remoto"\n\ngit remote prune "nombre-remoto" --dry-run (no las elimina)\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Realmente, los commit que hab\xeda en esa rama no se eliminan. Git usa un recolector de basura de vez en cuando para borrar commits antiguos. En caso de borrar archivos binarios muy grandes ser\xe1 necesario llamar al gc de git expl\xedcitamente con"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git gc\n")),(0,r.kt)("h2",{id:"tag--release"},"TAG & RELEASE"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Crear un tag"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git tag "nombre-tag"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Crear un tag con anotaci\xf3n de versi\xf3n + mensaje"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git tag -a v1.0.0 -m "Versi\xf3n 1.0.0"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Crear un tag sobre un commit a trav\xe9s de su hash"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git tag -a v.0.1.0 "hash-commit" -m "Mensaje a mostrar"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Crear un tag m\xe1s elaborado"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git tag -a "version" "hash-commit"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver los tag del repositorio"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git tag\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Eliminar un tag"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git tag -d "nombre-tag"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver informaci\xf3n de un tag espec\xedfico"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git show "tag"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Subir los tags al repositorio"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git push --tags\n")),(0,r.kt)("h2",{id:"versionado"},"VERSIONADO"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"v1.0.0"),(0,r.kt)("li",{parentName:"ul"},"Mayor.Menor.Parche"),(0,r.kt)("li",{parentName:"ul"},"M\xe1s informaci\xf3n acerca del versionado: ",(0,r.kt)("a",{parentName:"li",href:"https://semver.org/"},"semver.org"))),(0,r.kt)("h2",{id:"issues"},"ISSUES"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cerrar un Issue con un commit (fixes, closes, resolves)"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git commit -am "mensaje..." "fixes|closes|resolves #num-issue"\n')),(0,r.kt)("h2",{id:"stash-wip---working-in-progress"},"STASH ","[WIP - Working In Progress]"),(0,r.kt)("p",null,"El stash se utiliza para guardar el trabajo actual en el tiempo y poder volver a el # en cualquier momento"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git stash\n\ngit stash sav\n\ngit stash save "mensaje a mostrar"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver todos los trabajos en progreso que hay"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git stash list\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Igual a la anterior con m\xe1s informaci\xf3n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git stash list -a\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver informaci\xf3n del \xfaltimo stash realizado (cambios realizados en archivos)"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git show stash\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver informaci\xf3nd e un stash en concreto"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git show stash@{0}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Recuperar el \xfaltimo ingreso del stash y eliminarlo al mismo tiempo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git stash pop\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Recuperar el \xfaltimo ingreso del stash"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git stash apply\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Recuperar un stash por su ID"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git stash apply "ID-stash" ES EQUIVALENTE A git stash apply stash@{0}\n')),(0,r.kt)("p",null,"Ejemplo: ",(0,r.kt)("inlineCode",{parentName:"p"},"git stash apply stash@{1}")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Eliminar el \xfaltimo stash realizado"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git stash drop ES EQUIVALENTE A git stash drop stash@{0}\n\ngit stash drop "ID-stash"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Guardar todo menos los archivos en el stage (escenario)"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git stash save --keep-index\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Incluye todos los archivos junto a los que git no le da seguimiento ()"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git stash save --include-untracked\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Borrar todas las entradas del stash sin recuperaci\xf3n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git stash clear\n")),(0,r.kt)("h2",{id:"rebase"},"REBASE"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Traer commits de otra rama a la actual y rebasarlos"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git rebase "nombre-rama"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Rebase interactivo: ordenar commits, corregir mensajes de estos, unirlos o separarlos"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git rebase -i HEAD~"numero-de-commits"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Opciones del comando anterior"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"squash")," = une el commit donde es utilizado con el anterior"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"reward")," = cambiar el mensaje del commit"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"edit")," = editar uno o m\xe1s commits (Ej: separar archivos)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"En caso de separar un commit en dos sera necesario dar un salto atr\xe1s"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git reset HEAD^\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Agregar uno de los archivos al stage y realizar el commit"),(0,r.kt)("li",{parentName:"ol"},"Agregar los dem\xe1s archivos y realizar los commits deseados"),(0,r.kt)("li",{parentName:"ol"},"Continuar el rebase con:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git rebase --continue\n")),(0,r.kt)("h2",{id:"git-cherry-pick"},"GIT CHERRY-PICK"),(0,r.kt)("admonition",{title:"Referencia",type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://www.atlassian.com/es/git/tutorials/cherry-pick"},"https://www.atlassian.com/es/git/tutorials/cherry-pick"))),(0,r.kt)("p",null,"Se trae un commit por su referencia a tu posici\xf3n actual. Tiene opci\xf3nes de --abort, --continue y --quit."),(0,r.kt)("p",null,"Ejemplo de uso:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Antes"',title:'"Antes"'},"a - b - c - d   Main\n         \\\n           e - f - g Feature\n")),(0,r.kt)("p",null,"Nos movemos a la posici\xf3n donde necesitamos traer el commit y ejecutamos el siguiente comando:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git checkout main\n\ngit cherry-pick commitSha\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Despu\xe9s"',title:'"Despu\xe9s"'},"    a - b - c - d - f   Main\n         \\\n           e - f - g Feature\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Algunas opciones disponibles"))),(0,r.kt)("p",null,"Solicitar un mensaje de confirmaci\xf3n antes de aplicar la operaci\xf3n cherry-pick"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"-edit\n")),(0,r.kt)("p",null,"Mover el contenido sin realizar nueva confirmaci\xf3n"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"--no-commit\n")),(0,r.kt)("p",null,"A\xf1ade una linea 'signoff' al final del mensaje de confirmaci\xf3n de cherry-pick"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"--signoff\n")),(0,r.kt)("h2",{id:"comandos-\xfatiles"},"COMANDOS \xdaTILES"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Buscar una cadena en todo el \xe1bol de contenido"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git grep ""palabra o frase a buscar""\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Interfaz gr\xe1fica para un repositorio local"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt-get install gitk\n\ngitk\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ver objeto de \xe1rbol junto con el nombre y modo de cada uno, y el valor blob SHA-1"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git ls-tree "hash-commit"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Usando el valor SHA-1 se puede ver el tipo de objeto"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git cat-file -p "valor-SHA-1"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Crear archivo zip o tar de un \xe1rbol del repositorio"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git archive -- -format=tar master\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Chequeo de integridad del sistema de archivos de git. Detecta cualquier objeto corrompido"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git fsck\n")),(0,r.kt)("h2",{id:"alias"},"ALIAS"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git config --global alias.lg "log --oneline --decorate --all --graph"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git config --global alias.s "status -s -b"\n')),(0,r.kt)("h2",{id:"ssh"},"SSH"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Entrar en el directorio de usuario"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cd user-name/.ssh\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Crear las claves ssh para GitHub"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'ssh-keygen -t rsa -C "direccion@de.correo"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Registrar GitHub para SSH"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"  ssh -T git@github.com\n")),(0,r.kt)("h2",{id:"errores-comunes"},"ERRORES COMUNES"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Agregando todos los archivos al escenario"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git add -A\n")),(0,r.kt)("p",null,'warning: LF will be replaced by CRLF in "rutaArchivo"'),(0,r.kt)("p",null,"The file will have its orginal line endings in your working directory"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Soluci\xf3n:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git config core.autocrlf true\n")))}c.isMDXComponent=!0}}]);