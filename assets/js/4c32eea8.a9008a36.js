"use strict";(self.webpackChunkrubenfgr_website=self.webpackChunkrubenfgr_website||[]).push([[2998],{8637:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=r(4848),t=r(8453);const a={title:"Ejemplo StencilJS + Angular",sidebar_position:3},l=void 0,s={id:"webdev/web_components/example_stencil_angular",title:"Ejemplo StencilJS + Angular",description:"El objetivo principal de StencilJS es proporcionar herramientas para crear bibliotecas de componentes. Utiliza TS, JSX y CSS, y permite crear componentes web compatibles con los est\xe1ndares.",source:"@site/docs/webdev/web_components/example_stencil_angular.mdx",sourceDirName:"webdev/web_components",slug:"/webdev/web_components/example_stencil_angular",permalink:"/docs/webdev/web_components/example_stencil_angular",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Ejemplo StencilJS + Angular",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Introducci\xf3n",permalink:"/docs/webdev/web_components/intro"}},i={},c=[{value:"Beneficios",id:"beneficios",level:2},{value:"Ejemplo",id:"ejemplo",level:2},{value:"Iniciar el proyecto (Component)",id:"iniciar-el-proyecto-component",level:3},{value:"Instalamos dependencias e iniciamos",id:"instalamos-dependencias-e-iniciamos",level:3},{value:"Nos crea un componente por defecto en src/components/my-component.tsx que vamos a modificar",id:"nos-crea-un-componente-por-defecto-en-srccomponentsmy-componenttsx-que-vamos-a-modificar",level:3},{value:"Decoradores",id:"decoradores",level:3},{value:"Ciclo de vida",id:"ciclo-de-vida",level:3},{value:"Contruyendo la libreria",id:"contruyendo-la-libreria",level:3},{value:"Probando nuestra librer\xeda en un proyecto de Angular",id:"probando-nuestra-librer\xeda-en-un-proyecto-de-angular",level:2},{value:"Creando el proyecto de angular",id:"creando-el-proyecto-de-angular",level:3},{value:"Compartiendo la libreria en local con &quot;link&quot;",id:"compartiendo-la-libreria-en-local-con-link",level:3},{value:"Vinculando la libreria en el proyecto de angular",id:"vinculando-la-libreria-en-el-proyecto-de-angular",level:3},{value:"Modificamos algunos ficheros",id:"modificamos-algunos-ficheros",level:3},{value:"Tipado",id:"tipado",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"El objetivo principal de StencilJS es proporcionar herramientas para crear bibliotecas de componentes. Utiliza TS, JSX y CSS, y permite crear componentes web compatibles con los est\xe1ndares."}),"\n",(0,o.jsx)(n.h2,{id:"beneficios",children:"Beneficios"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Est\xe1ndares Web"}),"\n",(0,o.jsx)(n.li,{children:"Optimizaciones autom\xe1ticas al construir"}),"\n",(0,o.jsx)(n.li,{children:"Amigable a futuros cambios"}),"\n",(0,o.jsx)(n.li,{children:"API simple"}),"\n",(0,o.jsx)(n.li,{children:"Caracter\xedsticas de marcos de trabajo durante el desarrollo"}),"\n",(0,o.jsx)(n.li,{children:"Soporte amplio de navegador"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"ejemplo",children:"Ejemplo"}),"\n",(0,o.jsxs)(n.admonition,{title:"Repositorio",type:"info",children:[(0,o.jsx)(n.p,{children:"Incluye el proyecto de Stencil y dentro el proyecto de Angular (my-library-in-angular)"}),(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/rubenfgr-doc/stencil-my-components-library",children:"https://github.com/rubenfgr-doc/stencil-my-components-library"})})]}),"\n",(0,o.jsx)(n.h3,{id:"iniciar-el-proyecto-component",children:"Iniciar el proyecto (Component)"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Nombre del proyecto: my-components-library"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"npm init stencil\n"})}),"\n",(0,o.jsx)(n.h3,{id:"instalamos-dependencias-e-iniciamos",children:"Instalamos dependencias e iniciamos"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"cd my-components-library\r\n$ npm install\r\nnpm start\n"})}),"\n",(0,o.jsx)(n.h3,{id:"nos-crea-un-componente-por-defecto-en-srccomponentsmy-componenttsx-que-vamos-a-modificar",children:"Nos crea un componente por defecto en src/components/my-component.tsx que vamos a modificar"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"En src/index.html podemos ver como se est\xe1 utilizando"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="my-component.tsx"',children:'import { Component, Prop, h } from "@stencil/core";\r\nimport { format } from "../../utils/utils";\r\n\r\n@Component({\r\n  tag: "my-component",\r\n  styleUrl: "my-component.css",\r\n  shadow: true,\r\n})\r\nexport class MyComponent {\r\n  @Prop() first: string;\r\n  @Prop() middle: string;\r\n  @Prop() last: string;\r\n\r\n  private getText(): string {\r\n    return format(this.first, this.middle, this.last);\r\n  }\r\n\r\n  render() {\r\n    return <div>Hello, World! I\'m {this.getText()}</div>;\r\n  }\r\n}\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",metastring:'title="index.html"',children:'<my-component\r\n  first="Stencil"\r\n  middle="\'Don\'t call me a framework\'"\r\n  last="JS"\r\n></my-component>\n'})}),"\n",(0,o.jsx)(n.h3,{id:"decoradores",children:"Decoradores"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"@Component()"})," declares a new web component"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"@Prop()"})," declara una propidad a exponer"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"@State()"})," declara un estado interno"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"@Watch()"}),' declara un hook para comprobar cambios de estado en "propiedades y estados"']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"@Element()"})," declara una referencia el elemento host (si el elemento es my-component, ser\xeda una referencia a este)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"@Method()"})," declara un m\xe9todo a exponer"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"@Event()"})," declara un evento DOM a emitir (expone)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"@Listen()"})," escucha eventos del DOM"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Vamos a modificar el componente que viene por defecto aplicando estos decoradores"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:"title=my-component.tsx",children:"import { Component, Element, Event, EventEmitter, Listen, Method, Prop, State, Watch, h } from '@stencil/core';\r\nimport { format } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'my-component',\r\n  styleUrl: 'my-component.css',\r\n  shadow: true,\r\n})\r\nexport class MyComponent {\r\n  /**\r\n   * The first name\r\n   */\r\n  @Prop() first: string;\r\n\r\n  /**\r\n   * The middle name\r\n   */\r\n  @Prop() middle: string;\r\n\r\n  /**\r\n   * The last name\r\n   */\r\n  @Prop() last: string;\r\n\r\n  /**\r\n   * Esta propiedad no ser\xe1 expuesta y solo se utiliza internamente\r\n   */\r\n  @State() internal: string;\r\n\r\n  @Watch('first')\r\n  watchFirstHandler(newValue: boolean, oldValue: boolean) {\r\n    console.log('[my-component.tsx] @Prop() first, valor anterior: ', oldValue);\r\n    console.log('[my-component.tsx] @Prop() first, nuevo valor: ', newValue);\r\n  }\r\n\r\n  @Watch('internal')\r\n  watchInternalHandler(newValue: boolean, oldValue: boolean) {\r\n    console.log('[my-component.tsx] @State() internal, valor anterior: ', oldValue);\r\n    console.log('[my-component.tsx] @State() internal, nuevo valor: ', newValue);\r\n  }\r\n\r\n  @Element() hostEl: HTMLElement;\r\n\r\n  @Method()\r\n  async getMessage() {\r\n    return 'Hello from my-component exposed method';\r\n  }\r\n\r\n  @Event() onMessage: EventEmitter<string>;\r\n\r\n  @Listen('onMessage')\r\n  onMessageEventHandler(event: CustomEvent<string>) {\r\n    console.log('[my-component.tsx] Evento onMessage recibido, propiedad event.detail: ', event.detail);\r\n  }\r\n\r\n  constructor() {\r\n    console.log('[my-component.tsx] hostEl', this.hostEl);\r\n\r\n    let counter = 0;\r\n\r\n    setInterval(() => {\r\n      this.onMessage.emit('Mensage con contador: ' + counter);\r\n      counter++;\r\n    }, 2000);\r\n  }\r\n\r\n  private getText(): string {\r\n    return format(this.first, this.middle, this.last);\r\n  }\r\n\r\n  render() {\r\n    return <div>Hello, World! I'm {this.getText()}</div>;\r\n  }\r\n}\r\n\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",metastring:"title=index.html",children:'<!DOCTYPE html>\r\n<html dir="ltr" lang="en">\r\n  <head>\r\n    <meta charset="utf-8" />\r\n    <meta\r\n      name="viewport"\r\n      content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0"\r\n    />\r\n    <title>Stencil Component Starter</title>\r\n\r\n    <script type="module" src="/build/my-components-library.esm.js"><\/script>\r\n    <script nomodule src="/build/my-components-library.js"><\/script>\r\n  </head>\r\n  <body>\r\n    <my-component\r\n      first="Stencil"\r\n      last="\'Don\'t call me a framework\' JS"\r\n    ></my-component>\r\n  </body>\r\n\r\n  <script>\r\n    (async () => {\r\n      await customElements.whenDefined("my-component");\r\n      const myComponent = document.getElementsByTagName("my-component")[0];\r\n      setTimeout(() => {\r\n        myComponent.first = "RubenFGR";\r\n        myComponent.internal = "ESTO NO FUNCIONA YA QUE ES UN ESTADO INTERNO";\r\n      }, 3000);\r\n      var exposedMethodValue = await myComponent.getMessage();\r\n      console.log(\r\n        "[index.html] myComponent.getMessage(): ",\r\n        exposedMethodValue\r\n      );\r\n      myComponent.addEventListener("onMessage", (event) => {\r\n        console.log(\r\n          \'[index.html] Evento "onMessage" recibido, propiedad event.detail: \',\r\n          event.detail\r\n        );\r\n      });\r\n    })();\r\n  <\/script>\r\n</html>\n'})}),"\n",(0,o.jsx)(n.h3,{id:"ciclo-de-vida",children:"Ciclo de vida"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"connectedCallback()"})," Cuando el componente se conecta al DOM (antes de ser cargado). Puede ser llamado varias veces."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"disconnectedCallback()"})," Cuando el componente se desconecta del DOM. Puede ser llamado varias veces."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'const el = document.createElement("my-cmp");\r\ndocument.body.appendChild(el);\r\n// connectedCallback() called\r\n// componentWillLoad() called (first time)\r\n\r\nel.remove();\r\n// disconnectedCallback()\r\n\r\ndocument.body.appendChild(el);\r\n// connectedCallback() called again, but `componentWillLoad()` is not.\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"componentWillLoad()"})," Cuando el componente es conectado al DOM por primera vez y \xe1un no es renderizado. Solo se llama una vez, es un buen lugar para cargar los datos que van a ser renderizados"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"componentDidLoad()"})," Cuando el componente se ha renderizado por primera vez"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"componentShouldUpdate()"})," Cuando un @Prop o @State va a cambiar. Recibe 3 argumentos, antiguo valor, nuevo valor y el nombre de la propiedad o estado y retorna un boolean que indica si debe ser reenderizado o no."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"componentWillRender()"})," Llamado antes de reenderizar. Devuelve una promesa que permite esperar el nuevo renderizado."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"componentDidRender()"})," Llamado despu\xe9s de renderizado."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"componentWillUpdate()"})," Llamado cuando @Prop() o @State() han cambiado. No se ejecuta en el primer renderizado."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"componentDidUpdate()"})," Llamado justo cuando se actualiza el componente. No se ejecuta en el primer renderizado."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="my-component.tsx"',children:"import { Component, Element, Event, EventEmitter, Listen, Method, Prop, State, Watch, h } from '@stencil/core';\r\nimport { format } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'my-component',\r\n  styleUrl: 'my-component.css',\r\n  shadow: true,\r\n})\r\nexport class MyComponent {\r\n  /**\r\n   * The first name\r\n   */\r\n  @Prop() first: string;\r\n\r\n  /**\r\n   * The middle name\r\n   */\r\n  @Prop() middle: string;\r\n\r\n  /**\r\n   * The last name\r\n   */\r\n  @Prop() last: string;\r\n\r\n  /**\r\n   * Esta propiedad no ser\xe1 expuesta y solo se utiliza internamente\r\n   */\r\n  @State() internal: string;\r\n\r\n  @Watch('first')\r\n  watchFirstHandler(newValue: boolean, oldValue: boolean) {\r\n    console.log('[my-component.tsx] @Prop() first, valor anterior: ', oldValue);\r\n    console.log('[my-component.tsx] @Prop() first, nuevo valor: ', newValue);\r\n  }\r\n\r\n  @Watch('internal')\r\n  watchInternalHandler(newValue: boolean, oldValue: boolean) {\r\n    console.log('[my-component.tsx] @State() internal, valor anterior: ', oldValue);\r\n    console.log('[my-component.tsx] @State() internal, nuevo valor: ', newValue);\r\n  }\r\n\r\n  @Element() hostEl: HTMLElement;\r\n\r\n  @Method()\r\n  async getMessage() {\r\n    return 'Hello from my-component exposed method';\r\n  }\r\n\r\n  @Event() onMessage: EventEmitter<string>;\r\n\r\n  @Listen('onMessage')\r\n  onMessageEventHandler(event: CustomEvent<string>) {\r\n    console.log('[my-component.tsx] Evento onMessage recibido, propiedad event.detail: ', event.detail);\r\n  }\r\n\r\n  constructor() {\r\n    console.log('[my-component.tsx] hostEl', this.hostEl);\r\n\r\n    let counter = 0;\r\n\r\n    setTimeout(() => {\r\n      this.onMessage.emit('Mensage con contador: ' + counter);\r\n      counter++;\r\n    }, 3000);\r\n  }\r\n\r\n  connectedCallback() {\r\n    console.log('connectedCallback()');\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    console.log('disconnectedCallback()');\r\n  }\r\n\r\n  componentWillLoad() {\r\n    console.log('componentWillLoad()');\r\n  }\r\n\r\n  componentDidLoad() {\r\n    console.log('componentDidLoad()');\r\n  }\r\n\r\n  componentShouldUpdate() {\r\n    console.log('componentShouldUpdate()');\r\n  }\r\n\r\n  componentWillRender() {\r\n    console.log('componentWillRender()');\r\n  }\r\n\r\n  componentDidRender() {\r\n    console.log('componentDidRender()');\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    console.log('componentWillUpdate()');\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('componentDidUpdate()');\r\n  }\r\n\r\n  private getText(): string {\r\n    return format(this.first, this.middle, this.last);\r\n  }\r\n\r\n  render() {\r\n    return <div>Hello, World! I'm {this.getText()}</div>;\r\n  }\r\n}\r\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"contruyendo-la-libreria",children:"Contruyendo la libreria"}),"\n",(0,o.jsx)(n.p,{children:"Tipos de salida:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"dist-custom-elements. Permite exportar elementos personalizados individualmente dejando en el desarrollador la opci\xf3n de configurar la carga perezosa, la construcci\xf3n y el registro, ya sea a trav\xe9s de un framework o de forma nativa."}),"\n",(0,o.jsx)(n.li,{children:"dist. Es la salida por defecto que exporta la libreria de componentes al completo incluyendo la carga perezosa de cada uno de ellos al utilizarlo, es decir, el componente se cargar\xe1 cuando este dentro de la pantalla del usuario."}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"http://www",children:"www"}),". Orientado para aplicaciones web y p\xe1ginas web. Puede tener el beneficio del prerenderizado y trabajadores de servicio (service workers). La trae activa por defecto y permite probar los componentes que vamos creando."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"La configuraci\xf3n utilizada para el tutorial es la que viene por defecto que contiene los tres tipos:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="stencil.config.ts"',children:'import { Config } from "@stencil/core";\r\n\r\nexport const config: Config = {\r\n  namespace: "my-components-library",\r\n  outputTargets: [\r\n    {\r\n      type: "dist",\r\n      esmLoaderPath: "../loader",\r\n    },\r\n    {\r\n      type: "dist-custom-elements",\r\n    },\r\n    {\r\n      type: "docs-readme",\r\n    },\r\n    {\r\n      type: "www",\r\n      serviceWorker: null, // disable service workers\r\n    },\r\n  ],\r\n  testing: {\r\n    browserHeadless: "new",\r\n  },\r\n};\n'})}),"\n",(0,o.jsx)(n.p,{children:"Realizamos la construcci\xf3n con el siguiente comando:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"npm run build\n"})}),"\n",(0,o.jsx)(n.h2,{id:"probando-nuestra-librer\xeda-en-un-proyecto-de-angular",children:"Probando nuestra librer\xeda en un proyecto de Angular"}),"\n",(0,o.jsx)(n.p,{children:"Por defecto, en el proyecto de stencil, el packague.json ya est\xe1 configurado para publicar nuestra libreria de forma local o en un registro de paquetes como npm."}),"\n",(0,o.jsx)(n.p,{children:'En este tutorial lo vamos hacer de forma local con el comando "link"'}),"\n",(0,o.jsx)(n.h3,{id:"creando-el-proyecto-de-angular",children:"Creando el proyecto de angular"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"ng new my-library-in-angular\n"})}),"\n",(0,o.jsx)(n.h3,{id:"compartiendo-la-libreria-en-local-con-link",children:'Compartiendo la libreria en local con "link"'}),"\n",(0,o.jsx)(n.p,{children:"Este comando se ejecuta en la ra\xedz del proyecto de stencil, donde est\xe1 el packague.json."}),"\n",(0,o.jsx)(n.p,{children:'El nombre de la librer\xeda ser\xe1 el que tengamos puesto en la propiedad "name" del packague.json.'}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"npm link\n"})}),"\n",(0,o.jsx)(n.h3,{id:"vinculando-la-libreria-en-el-proyecto-de-angular",children:"Vinculando la libreria en el proyecto de angular"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"cd my-library-in-angular\r\nnpm link my-components-library\n"})}),"\n",(0,o.jsx)(n.h3,{id:"modificamos-algunos-ficheros",children:"Modificamos algunos ficheros"}),"\n",(0,o.jsx)(n.p,{children:"En app.module.ts agregamos el schema CUSTOM_ELEMENTS_SCHEMA para permitir el uso de elementos personalizados en Angular."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="app.module.ts"',children:'import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from "@angular/core";\r\nimport { BrowserModule } from "@angular/platform-browser";\r\n\r\nimport { AppComponent } from "./app.component";\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule],\r\n  providers: [],stencil\r\nexport class AppModule {}\n'})}),"\n",(0,o.jsx)(n.p,{children:"En main.ts definimos nuestros elementos personalizados a trav\xe9s de los m\xe9todos de ayuda que contiene stencil para facilitar el trabajo: defineCustomElements y applyPolyfills. Este \xfaltimo para compatibilidad con navegadores antig\xfcos."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="main.ts"',children:'import { platformBrowserDynamic } from "@angular/platform-browser-dynamic";\r\n\r\nimport { AppModule } from "./app/app.module";\r\n\r\nimport {\r\n  defineCustomElements,\r\n  applyPolyfills,\r\n} from "my-components-library/loader";\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n\r\napplyPolyfills().then(() => defineCustomElements());\n'})}),"\n",(0,o.jsx)(n.p,{children:"Y por \xfaltimo, hacemos uso de nuestro componente en app.component.html"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="app.component.html"',children:"<h1>Probando nuestra libreria de stencil</h1>\r\n\r\n<body>\r\n  <my-component first=\"Stencil\" last=\"'Don't call me a framework' JS\"></my-component>\r\n</body>\r\n\r\n<script>\r\n  (async () => {\r\n    await customElements.whenDefined('my-component');\r\n    const myComponent = document.getElementsByTagName('my-component')[0];\r\n    setTimeout(() => {\r\n      myComponent.first = 'RubenFGR';\r\n      myComponent.internal = 'ESTO NO FUNCIONA YA QUE ES UN ESTADO INTERNO';\r\n    }, 3000);\r\n    var exposedMethodValue = await myComponent.getMessage();\r\n    console.log('[index.html] myComponent.getMessage(): ', exposedMethodValue);\r\n    myComponent.addEventListener('onMessage', event => {\r\n      console.log('[index.html] Evento \"onMessage\" recibido, propiedad event.detail: ', event.detail);\r\n    });\r\n  })();\r\n<\/script>\n"})}),"\n",(0,o.jsx)(n.h2,{id:"tipado",children:"Tipado"}),"\n",(0,o.jsx)(n.p,{children:'Stencil va preparado para el tipado con TS y por defecto cuando hacemos el "build" nos genera los tipos de nuestros ficheros en el directorio dist/types.'}),"\n",(0,o.jsxs)(n.admonition,{title:"Nomenclatura de tipos",type:"info",children:[(0,o.jsx)(n.p,{children:"HTML<NombreComponente>Element"}),(0,o.jsx)(n.p,{children:"Por ejemplo, para nuestro componente, MyComponent seria:"}),(0,o.jsx)(n.p,{children:"HTMLMyComponentElement"})]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>s});var o=r(6540);const t={},a=o.createContext(t);function l(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);