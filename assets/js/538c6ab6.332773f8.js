"use strict";(self.webpackChunkruben_rosales_web=self.webpackChunkruben_rosales_web||[]).push([[1539],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>d});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),c=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},p=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),g=r,d=u["".concat(l,".").concat(g)]||u[g]||m[g]||o;return a?t.createElement(d,i(i({ref:n},p),{},{components:a})):t.createElement(d,i({ref:n},p))}));function d(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},726:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var t=a(7462),r=(a(7294),a(3905));const o={title:"Ejemplo Node + Angular",sidebar_position:3},i=void 0,s={unversionedId:"firebase/cloud_messaging/example_node_angular",id:"firebase/cloud_messaging/example_node_angular",title:"Ejemplo Node + Angular",description:"Incluye el proyecto de Node (back) y Angular (front)",source:"@site/docs/firebase/cloud_messaging/example_node_angular.mdx",sourceDirName:"firebase/cloud_messaging",slug:"/firebase/cloud_messaging/example_node_angular",permalink:"/docs/firebase/cloud_messaging/example_node_angular",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/firebase/cloud_messaging/example_node_angular.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Ejemplo Node + Angular",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Introducci\xf3n",permalink:"/docs/firebase/cloud_messaging/intro"},next:{title:"Git",permalink:"/docs/category/git"}},l={},c=[{value:"Configurar FCM en la Consola de Firebase",id:"configurar-fcm-en-la-consola-de-firebase",level:2},{value:"Configurar backend (Node)",id:"configurar-backend-node",level:2},{value:"Configurar frontend (Angular)",id:"configurar-frontend-angular",level:2},{value:"Obtener token en front y usar en back",id:"obtener-token-en-front-y-usar-en-back",level:2}],p={toc:c},u="wrapper";function m(e){let{components:n,...a}=e;return(0,r.kt)(u,(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Repositorio",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Incluye el proyecto de Node (back) y Angular (front)"),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/rubenfgr-doc/firebase-fcm-node-angular"},"https://github.com/rubenfgr-doc/firebase-fcm-node-angular"))),(0,r.kt)("h2",{id:"configurar-fcm-en-la-consola-de-firebase"},"Configurar FCM en la Consola de Firebase"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Entramos al apartado de proyectos de Firebase"),(0,r.kt)("li",{parentName:"ul"},"Agregamos un nuevo proyecto con el nombre: test-push-notifications"),(0,r.kt)("li",{parentName:"ul"},"Deseleccionamos Google Analytics y lo creamos"),(0,r.kt)("li",{parentName:"ul"},"Seleccionamos Participaci\xf3n / Messaging"),(0,r.kt)("li",{parentName:"ul"},"Agregamos una App Web (<\\/>)"),(0,r.kt)("li",{parentName:"ul"},"Sobrenombre: Test Push Notifications"),(0,r.kt)("li",{parentName:"ul"},'Clic en "Registrar app"'),(0,r.kt)("li",{parentName:"ul"},"En este punto no hacemos nada m\xe1s (volvemos a la consola)")),(0,r.kt)("h2",{id:"configurar-backend-node"},"Configurar backend (Node)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'En la consola de firebase, vamos a "Descripci\xf3n general" > Configuraci\xf3n del proyecto'),(0,r.kt)("li",{parentName:"ul"},'Pesta\xf1a de "Cuentas de servicio"'),(0,r.kt)("li",{parentName:"ul"},'Clic en "Administrar permisos de la cuenta de servicio"'),(0,r.kt)("li",{parentName:"ul"},"En el men\xfa, seleccionamos APIs y servicios > APIs y servicios habilitados > HABILITAR APIS Y SERVICIOS"),(0,r.kt)("li",{parentName:"ul"},'Buscamos "messaging"'),(0,r.kt)("li",{parentName:"ul"},"Habilitamos: Cloud Messaging, Firebase Cloud Messaging API y FCM Registration API"),(0,r.kt)("li",{parentName:"ul"},"En la consola, seleccionamos Node.js"),(0,r.kt)("li",{parentName:"ul"},"Clic en Generar nueva clave privada"),(0,r.kt)("li",{parentName:"ul"},"Renombramos el .json descargado a key.json"),(0,r.kt)("li",{parentName:"ul"},"Creamos el proyecto de backend")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"mkdir test-push-notifications-back\ncd test-push-notifications-back\nnpm init -y\ntouch index.js\nnpm i firebase@10.1.0\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Copiamos key.json en la ra\xedz del proyecto"),(0,r.kt)("li",{parentName:"ul"},"Agregamos el siguiente c\xf3digo en el index.js")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},'var admin = require("firebase-admin");\n\nvar serviceAccount = require("./key.json");\n\nvar app = admin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nadmin\n  .messaging(app)\n  .send({\n    token: "<AQUI-EL-TOKEN-DE-CLIENTE>",\n    data: { title: "T\xedtulo", message: "Mensaje" },\n  })\n  .then((v) => {\n    console.log("Ok", v);\n  })\n  .catch((err) => {\n    console.log("KO", err);\n  });\n')),(0,r.kt)("h2",{id:"configurar-frontend-angular"},"Configurar frontend (Angular)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Iniciamos un proyecto de Angular")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"ng new test-push-notifications-front\ncd test-push-notifications-front\ntouch src/firebase-messaging-sw.js\nnpm i firebase@10.1.0\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Modificamos el angular.json")),(0,r.kt)("p",null,"Agregamos el archivo firebase-messaging-sw.js en los assets."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=angular.json",title:"angular.json"},'{\n  ...\n  "projects": {\n    "front": {\n      ...\n      "architect": {\n        "build": {\n          ...\n          "options": {\n            ...\n            "assets": [\n              "src/favicon.ico",\n              "src/assets",\n              "src/firebase-messaging-sw.js"\n            ],\n            ...\n          },\n        }\n      }\n    }\n  }\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Agregamos el siguiente c\xf3digo en firebase-messaging-sw.js")),(0,r.kt)("p",null,"La configuraci\xf3n la obtenemos en la consola de firebase > Configuraci\xf3n del proyecto > General"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=firebase-messaging-sw.js",title:"firebase-messaging-sw.js"},'importScripts(\n  "https://www.gstatic.com/firebasejs/10.1.0/firebase-app-compat.js"\n);\nimportScripts(\n  "https://www.gstatic.com/firebasejs/10.1.0/firebase-messaging-compat.js"\n);\n\n// Initialize the Firebase app in the service worker by passing the generated config\nvar firebaseConfig = {\n  apiKey: "AIzaSyD9CxihmhjZYx7coxsRvjNY1WOUCumJGDU",\n  authDomain: "push-notifications-96ab3.firebaseapp.com",\n  projectId: "push-notifications-96ab3",\n  storageBucket: "push-notifications-96ab3.appspot.com",\n  messagingSenderId: "265925964312",\n  appId: "1:265925964312:web:e05d6f5246c1d9eb5a496d",\n  measurementId: "G-QBJE50HT2H",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst messaging = firebase.messaging(firebaseApp);\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Modificamos el main.ts")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=main.ts",title:"main.ts"},'import { platformBrowserDynamic } from "@angular/platform-browser-dynamic";\n\nimport { AppModule } from "./app/app.module";\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from "firebase/app";\n\nconst firebaseConfig = {\n  apiKey: "AIzaSyD9CxihmhjZYx7coxsRvjNY1WOUCumJGDU",\n  authDomain: "push-notifications-96ab3.firebaseapp.com",\n  projectId: "push-notifications-96ab3",\n  storageBucket: "push-notifications-96ab3.appspot.com",\n  messagingSenderId: "265925964312",\n  appId: "1:265925964312:web:e05d6f5246c1d9eb5a496d",\n  measurementId: "G-QBJE50HT2H",\n};\n\ninitializeApp(firebaseConfig);\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Modificamos el app.component.ts")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=app.component.ts",title:"app.component.ts"},'import { Component, OnInit } from "@angular/core";\nimport {\n  getMessaging,\n  getToken,\n  onMessage,\n  Messaging,\n} from "@firebase/messaging";\n\n@Component({\n  selector: "app-root",\n  templateUrl: "./app.component.html",\n  styleUrls: ["./app.component.scss"],\n})\nexport class AppComponent implements OnInit {\n  title = "FCM Received Message";\n  payload = {};\n  token = "";\n\n  ngOnInit(): void {\n    const messaging: Messaging = getMessaging();\n\n    getToken(messaging, {\n      vapidKey:\n        "BAaTt4I12tsLSyl11S8hENePANoCp8FfzrjaPhczENU6Gnv9ZScgzOJPuy_-GwpbCogEg5ZxkEQLSzeOzVIckx8",\n    })\n      .then((currentToken) => {\n        if (currentToken) {\n          // Send the token to your server and update the UI if necessary\n          // ...\n          console.log("currentToken: ", currentToken);\n          this.token = currentToken;\n        } else {\n          // Show permission request UI\n          console.log(\n            "No registration token available. Request permission to generate one."\n          );\n          // ...\n        }\n      })\n      .catch((err) => {\n        console.log("An error occurred while retrieving token. ", err);\n        // ...\n      });\n\n    onMessage(messaging, (payload) => {\n      console.log("Message received (foreground): ", payload);\n      this.payload = payload;\n    });\n  }\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Modificamos el app.component.html")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:"title=app.component.html",title:"app.component.html"},"<h1>{{ title }}</h1>\n<h2>Token</h2>\n<pre>\n{{ token }}\n</pre>\n<h2>Payload</h2>\n<pre>\n  {{ payload | json }}\n</pre>\n")),(0,r.kt)("h2",{id:"obtener-token-en-front-y-usar-en-back"},"Obtener token en front y usar en back"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Front. Ejecutamos el proyecto y copiamose el token que se imprimir\xe1 por html o consola"),(0,r.kt)("li",{parentName:"ul"},"Back. Copiamos el token en: <AQUI-EL-TOKEN-DE-CLIENTE",">"),(0,r.kt)("li",{parentName:"ul"},"Ejecutamos el back"),(0,r.kt)("li",{parentName:"ul"},"En este momento el front a tenido que recibir el mensaje del back y mostrarlo en pantalla")))}m.isMDXComponent=!0}}]);