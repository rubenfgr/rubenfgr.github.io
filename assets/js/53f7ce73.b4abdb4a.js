"use strict";(self.webpackChunkrubenfgr_website=self.webpackChunkrubenfgr_website||[]).push([[3168],{2077:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var t=n(4848),o=n(8453);const i={title:"Temperatura ventilador"},s=void 0,a={id:"iot/raspberrypi/temperatura-ventilador",title:"Temperatura ventilador",description:"- 1\xba Script. Habilitar el PIN GPIO del ventilador en cada reinicio",source:"@site/docs/iot/raspberrypi/temperatura-ventilador.md",sourceDirName:"iot/raspberrypi",slug:"/iot/raspberrypi/temperatura-ventilador",permalink:"/docs/iot/raspberrypi/temperatura-ventilador",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Temperatura ventilador"},sidebar:"tutorialSidebar",previous:{title:"Referencia",permalink:"/docs/iot/raspberrypi/referencia"},next:{title:"Open Source",permalink:"/docs/category/open-source"}},c={},l=[];function p(e){const r={blockquote:"blockquote",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"1\xba Script. Habilitar el PIN GPIO del ventilador en cada reinicio"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"#!/bin/bash\r\n###########################################################################\r\n### References:\r\n### I/O Control:\r\n### http://www.instructables.com/id/Control-Stuff-with-your-Raspberry-Pi-GPIO/?ALLSTEPS\r\n### http://www.raspberrypi.org/forums/viewtopic.php?p=131069&sid=88282aaa50634ad7db83c3965625c033#p131069\r\n###\r\n###########################################################################\r\n### Replace with your correct GPIO number\r\nfor pin in 17; do\r\ngpio write $pin 0\r\ngpio export $pin out\r\ndone\r\nexit 0\n"})}),"\n",(0,t.jsx)(r.p,{children:"Para hacer ejecutable este archivo, utilizamos este comando:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"chmod u+x OnReboot.sh\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"2\xba Script. Se encargar\xe1 de controlar el puerto GPIO donde tienes conectado el ventilador, llamaremos a este archivo Thermostat.sh"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'#!/bin/bash\r\n###########################################################################\r\n### References:\r\n### I/O Control:\r\n### http://www.instructables.com/id/Control-Stuff-with-your-Raspberry-Pi-GPIO/?ALLSTEPS\r\n### http://www.raspberrypi.org/forums/viewtopic.php?p=131069&sid=88282aaa50634ad7db83c3965625c033#p131069\r\n###\r\n### bash if/then\r\n### http://www.thegeekstuff.com/2010/06/bash-if-statement-examples/\r\n### http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO-6.html\r\n### http://www.dreamsyssoft.com/unix-shell-scripting/ifelse-tutorial.php\r\n###\r\n### bash sleep ()\r\n### http://www.cyberciti.biz/faq/linux-unix-sleep-bash-scripting/\r\n###########################################################################\r\n#\r\nSoCTemp="`sudo /opt/vc/bin/vcgencmd measure_temp | tr -d "=temp.\'C"`"\r\n# SoCTemp=300 # Enable this line for debugging\r\nLowLimit=490\r\nHighLimit=510\r\n#\r\necho "Low Limit :"$LowLimit\r\necho "High Limit:"$HighLimit\r\necho "SoC Temp  :"$SoCTemp\r\n## echo "1" > /sys/class/gpio/gpio17/value\r\n###########################################################################\r\nif [ $SoCTemp -le $HighLimit ]; then\r\n   ### Turn on GPIO 21 off:\r\n   echo "SoC is cool($SoCTemp), Turning off the fan in 20 seconds ..."\r\n   sleep 20 ; echo "0" > /sys/class/gpio/gpio17/value\r\n   echo "Done!"\r\n   exit 0\r\nfi\r\nif [ $SoCTemp -ge $LowLimit ]; then\r\n   ### Turn on GPIO 21 on:\r\n   echo "SoC is getting hot ($SoCTemp), Turning on the fan now!"\r\n   echo "1" > /sys/class/gpio/gpio17/value\r\n   echo "Done!"\r\n   exit 0\r\nfi\n'})}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"Asignar permisos de ejecuci\xf3n"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"chmod u+x Thermostat.sh\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Indicar al programador de tareas cron cuando utilizar cada script"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"@reboot /home/pi/OnReboot.sh &\r\n*/1 * * * * /home/pi/Thermostat.sh &\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Luego del siguiente reinicio, se ejecutar\xe1 el archivo OnReboot.sh otorgando las permisolog\xedas y el archivo Thermostat.sh se ejecutar\xe1 cada minuto en el background, controlando el encendido y apagado del ventilador."})]})}function d(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>a});var t=n(6540);const o={},i=t.createContext(o);function s(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);