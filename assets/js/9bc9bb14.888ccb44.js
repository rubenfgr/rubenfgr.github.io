"use strict";(self.webpackChunkrubenfgr_website=self.webpackChunkrubenfgr_website||[]).push([[6165],{8338:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>a});var s=r(4848),o=r(8453);const l={title:"Referencia"},i=void 0,c={id:"docker/0referencia",title:"Referencia",description:"Informaci\xf3n sobre el servicio de Docker",source:"@site/docs/docker/0referencia.md",sourceDirName:"docker",slug:"/docker/0referencia",permalink:"/docs/docker/0referencia",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Referencia"},sidebar:"tutorialSidebar",previous:{title:"Docker",permalink:"/docs/category/docker"},next:{title:"Aliases",permalink:"/docs/docker/aliases"}},d={},a=[{value:"IMAGENES",id:"imagenes",level:2},{value:"IMAGENES OFICIALES",id:"imagenes-oficiales",level:3},{value:"IMAGENES PERSONALIZADAS",id:"imagenes-personalizadas",level:3},{value:"DOCKERFILE",id:"dockerfile",level:4},{value:"BUILD",id:"build",level:3},{value:"CONTAINERS",id:"containers",level:2},{value:"VOLUMES",id:"volumes",level:2},{value:"DOCUMENT ROOT",id:"document-root",level:2},{value:"NETWORK",id:"network",level:2},{value:"DOCKER COMPOSE",id:"docker-compose",level:2},{value:"Compose wordpress",id:"compose-wordpress",level:3},{value:"Compose Drupal",id:"compose-drupal",level:3},{value:"Compose Prestashop",id:"compose-prestashop",level:3},{value:"Compose Joomla",id:"compose-joomla",level:3},{value:"Compose React E-Commerce",id:"compose-react-e-commerce",level:3},{value:"Compose Guacamole",id:"compose-guacamole",level:3},{value:"Compose Zabbix",id:"compose-zabbix",level:3},{value:"Container openssh-server",id:"container-openssh-server",level:3},{value:"Docker Registry",id:"docker-registry",level:3},{value:"Otros",id:"otros",level:2},{value:"Bash",id:"bash",level:3},{value:"MySQL",id:"mysql",level:3},{value:"Errores",id:"errores",level:2}];function t(n){const e={blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"Informaci\xf3n sobre el servicio de Docker"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"/var/run/docker.sock"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Correr HELLO-WORLD"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"docker run hello-world\n"})}),"\n",(0,s.jsx)(e.h2,{id:"imagenes",children:"IMAGENES"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Ver las imagenes actuales en el host de docker"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"docker images\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Listar imagenes filtrando por atributos"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"docker images -f dangling=true\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Listar con filtrado y solo mostrar los ID"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"docker images -f dangling=true -q\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Eliminar todas las imagenes en el limbo"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"docker images -f dangling=true -q | xargs docker rmi\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Eliminar una imagen"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker image rm -f "ID-imagen"\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Eiminar varias imagenes"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker rmi "nombre-imagen":"tag-imagen" ["nombre-imagen":"tag-imagen"]\n'})}),"\n",(0,s.jsx)(e.h3,{id:"imagenes-oficiales",children:"IMAGENES OFICIALES"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Descargar una imagen oficial"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker pull "nombre-imagen"\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker pull "nombre-imagen":"version"\n'})}),"\n",(0,s.jsx)(e.h3,{id:"imagenes-personalizadas",children:"IMAGENES PERSONALIZADAS"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Buenas practicas"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Efimeros (servicio destruible facilmente)"}),"\n",(0,s.jsx)(e.li,{children:"Un servicio por contenedor"}),"\n",(0,s.jsx)(e.li,{children:'Build context -" .dockerignore'}),"\n",(0,s.jsx)(e.li,{children:"Pocas capas"}),"\n",(0,s.jsx)(e.li,{children:"Multi linea \\"}),"\n",(0,s.jsx)(e.li,{children:"Varios argumentos en una sola capa"}),"\n",(0,s.jsx)(e.li,{children:"No instalar paquetes innecesarios"}),"\n",(0,s.jsx)(e.li,{children:"Labels"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Construir una imagen a trav\xe9s del Dockerfile (tag para poner nombre a la imagen al final para cojer el Dockerfile). Contenido del Dockerfile para apache+ubuntu"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"FROM"})," - S.O \xf3 Imagen misma desde donde comenzar"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"RUN"})," - Intrucciones que se pueden ejecutar en la terminal"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"COPY/ADD"})," - Copiar archivos desde la maquina a la imagen. ADD se utiliza para utilizar una URL de origen, es decir, copia el contenido de esa URL al destino"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"ENV"})," - Variables de entorno"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"WORKDIR"})," - Directorios de trabajo"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"EXPOSE"})," - Exponer puertos"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"LABEL"})," - Etiquetas (metadata de la imagen, version, descripci\xf3n, etc.)"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"USER"})," - Usuario que ejecuta la tarea"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"VOLUME"})," - Vol\xfamenes"]}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"CMD .dockerignore"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'FROM ubuntu:latest\r\n\r\nLABEL version=1.0\r\nLABEL descripcion="This is an apache image"\r\nLABEL vendor=yo\r\n\r\nRUN apt-get update && apt-get upgrade && apt-get install apache2 -y\r\n\r\nWORKDIR /var/www/html\r\n\r\nCOPY bootstrap .\r\n\r\nENV contenido prueba\r\n\r\nRUN echo "$contenido" " /var/www/html/prueba.html\r\n\r\nRUN echo "$(whoami)" " /var/www/html/user1.html\r\n\r\nUSER ricardo && chown ricardo /var/www/html\r\n\r\nRUN echo "$(whoami)" " /var/www/html/user2.html\r\n\r\nEXPOSE 81\r\n\r\nCMD apachectl -DFOREGROUND\n'})}),"\n",(0,s.jsx)(e.h4,{id:"dockerfile",children:"DOCKERFILE"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Crear un script CMD para Dockerfile"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'#!/bin/bash\r\n\r\necho "Iniciando container..."\r\napachectl -DFOREGROUND\n'})}),"\n",(0,s.jsx)(e.h3,{id:"build",children:"BUILD"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Enviar datos al .dockerignore"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'echo ""nombre-archivo-directorio" "" .dockerignore\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Una vez creado el Dockerfile ejecutar por shell"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker build --tag apache-centos[:"tag"]`\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Build con un dockerfile con distinto nombre"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker build -t test -f "nombre-dockerfile-personalizado"\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Comprobar el historial de capas de una imagen"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker history -H "nombre-imagen":"tag"\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker history -H "nombre-imagen":"tag" --no-trunc\n'})}),"\n",(0,s.jsx)(e.h2,{id:"containers",children:"CONTAINERS"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Correr un contenedor (-d en segundo plano)"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker run -d "nombre-imagen"\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker run -d --name "nombre" "nombre-imagen"[:"tag"]\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Correr un contenedor mapeando el puerto del PC anfitrion al contenedor"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker run -d --name "nombre" -p 80:80 "nombre-imagen"[:"tag"]'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Correr un contenedor mapeando el puerto del PC anfitrion al contenedor"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker run -d --restart unless-stopped redis --name "nombre" -p 80:80 "nombre-imagen"[:"tag"]'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Correr un contenedor agregando variables de entorno"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker run -dti -e "prueba1=4321" --name environment env'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Correr un contenedor y navegar a un directorio en el arranque"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker run -d -w /"dir-name" "nombre-imagen"[:"tag"]\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Ver los contenedores en ejecuci\xf3n"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"docker ps"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"ver los contenedores en ejecuci\xf3n (incluidos los caidos)"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"docker ps -a"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"ver los contenedores en ejecuci\xf3n (Solo ID)"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"docker ps -q"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Ver el \xfaltimo contenedor creado"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"docker ps -l"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Eliminar contenedores con --force y --volumes"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker rm -fv "nombre-contenedor" ["nombre-contenedor"...]'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:'Eliminar contenedores "exited"'})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"docker rm -v $(docker ps -a -q -f status=exited)"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Eliminar todos los contenedores"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"docker ps -q | xargs docker rm -f"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"docker rm -fv $(docker ps -aq)"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Inspeccionar un contenedor"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker inspect "nombre-contenedor"|"ID-contenedor"'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Renombrar un contenedor en ejecuci\xf3n"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'dockerrename "nombre-actual" "nombre-nuevo"'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Detener un contenedor"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker stop "nombre-contenedor"|"ID-contenedor"'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Iniciar un contenedor"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker start "nombre-contenedor"|"ID-contenedor"'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Reiniciar (stop + start) un contenedor"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker restart "nombre-contenedor"|"ID-contenedor"'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Ingresar a la terminal de un contenedor -ti(terminal + interactivo)"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker exec -ti "nombre-contenedor"|"ID-contenedor" bash'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Ingresar a la terminal de un contenedor -u (usuario) -ti(terminal + interactivo)"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker exec -u "nombre-usuario" -ti "nombre-contenedor"|"ID-contenedor" bash'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Comprobar usuario y hostname dentro de la terminal del contenedor"})}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"whoami"}),"\r\n",(0,s.jsx)(e.code,{children:"hostname"})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Ver el log de un contenedor en ejecuci\xf3n"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker logs -f "nombre-contenedor"'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Ver el consumo hardware de un contenedor"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker stats "nombre-contenedor"'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Limitar la RAM de un contenedor"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker run -d -m ""cantidad"[mb|gb]" --name "nombre-contenedor" "nombre-imagen"'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Limitar la CPU de un contenedor"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker run -d --cpuset-cpus "rango-cpus" --name "nombre-contenedor" "nombre-imagen"'})}),"\n",(0,s.jsx)(e.p,{children:'" rango-cpus = si tenemos 6 CPUs, 0-2 ocuparia: 0, 1 y 2; 3-5 ocupar\xeda 3, 4 y 5'}),"\n",(0,s.jsxs)(e.p,{children:['" Ver cantidad de CPUs ',(0,s.jsx)(e.code,{children:'grep "model name" /proc/cpuinfo | wc -l'})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Copiar archivos a un contenedor corriendo"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker cp "archivo|directorio-anfitrion nombre-contenedor:nombre-directorio"'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker cp "nombre-contenedor:nombre-directorio archivo|directorio-anfitrion"'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Guardar el estado de un contenedor en una imagen"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:'" El contenido dentro del volumen no se guarda con la imagen resultante de un commit'}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker commit "nombre-contenedor-run" "nombre-nueva-imagen"'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Sobreescribir el CMD de una imagen sin un Dockerfile"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:'" Pasar el cmd al final de la imagen al corer un contenedor con run (al final)'}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"docker run -d -p 8080:8080 centos python -m SimpleHTTPServer 8080"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Desctrucci\xf3n de un contenedor autom\xe1ticamente"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:'" --rm el contenedor es temporal y una vez que se salga de la sesi\xf3n debe morir'}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:'docker run --rm -ti --name "nombre-contenedor" "nombre-imagen" bash'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Comprobar el tama\xf1o de los archivos/directorios de creaci\xf3n de la imagen"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"du -shc *"})}),"\n",(0,s.jsx)(e.h2,{id:"volumes",children:"VOLUMES"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Vol\xfamenes de host - Caso pr\xe1ctico MySQL"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'docker run -d --name my-db -p 3310:3306 -e "MYSQL_ROOT_PASSWORD=12345678" -v d:/1_RubenFGR/1_DevOps/1_Documentacion/Microservicios/Docker/Containers/mysql:/var/lib/mysql mariadb:latest\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Vol\xfamenes an\xf3nimos - Caso pr\xe1ctico MySQL"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'docker run -d --name my-db -p 3310:3306 -e "MYSQL_ROOT_PASSWORD=12345678" -v /var/lib/mysql mariadb:latest\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Crear un volumen"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'docker volume create "nombre-volumen"\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Eliminar un volumen"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'docker volume rm "nombre-volumen"\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Correr un contenedor asignando un volumen ya creado"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'docker run -d --name my-db -p 3310:3306 -e "MYSQL_ROOT_PASSWORD=12345678" -v "my-create-volumen":/var/lib/mysql mariadb:latest\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Ver volumes que no est\xe1n referenciados por ning\xfan contenedor"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"docker volume ls -f dangling=true\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Eliminar volumnes no referenciados"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"docker volume ls -f dangling=true -q | xargs docker volume rm\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Guardar datos de MongoDB"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'docker run -d -p 27017:27017 -v "directorio/volume":/data/db mongo\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Guardar datos de Jenkins"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker run -d --name jenkins -p 8080:8080 -v /home/rubenfgr/jenkins/:/var/jenkins_home jenkins\r\n# ver la contrase\xf1a\r\ndocker exec jenkins bash -c "cat /var/jenkins_home/secrets/initialAdminPassword"\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Guardar logs de Nginx"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"docker run -d --name my-nginx -p 80:80 -v /home/rubenfgr/nginx/:/var/log/nginx nginx\r\n# Mostrar contenido de ficheros en tiempo real\r\ntail -f nginx/error.log\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Compartir volumen"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'# crear un script\r\n#!/bin/bash\r\n\r\nwhile true; do\r\n   echo ""p" $(date +%H:%M:%S) "/p"" "" /opt/index.html && \\\r\n   sleep 10\r\ndone\r\n\r\n# Crear el Dockerfile\r\nFROM centos\r\n\r\nCOPY start.sh /start.sh\r\n\r\nRUN chmod +x /start.sh\r\n\r\nCMD /start.sh\r\n\r\n# Construir la imagen del generador\r\n# Ejecutar los contenedores del generador y nginx con volumen compartido\r\ndocker run -v $PWD/common:/opt -d --name gen generador\r\ndocker run -d --name nginx -v $PWD/common:/usr/share/nginx/html -p 80:80 nginx\n'})}),"\n",(0,s.jsx)(e.h2,{id:"document-root",children:"DOCUMENT ROOT"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Mostrar el directorio root"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"docker info | grep -i root\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Cambiar el Document Root de Docker"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"vim /lib/systemd/system/docker.service"})}),"\n",(0,s.jsx)(e.p,{children:'" Mover la carpeta de docker /var/lib/docker a "nueva-localizaci\xf3n"'}),"\n",(0,s.jsxs)(e.p,{children:['" Editar la linea ',(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.em,{children:'ExecStart=/usr/bin/dockerd --data-root "nueva-localizaci\xf3n"'})})]}),"\n",(0,s.jsx)(e.p,{children:'" Notificar los cambios de un archivo de systemd'}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"systemctl daemon-reload"})}),"\n",(0,s.jsx)(e.p,{children:'" Reiniciar el servicio de docker para aplicar el cambio realizado'}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"systemctl restart docker"})}),"\n",(0,s.jsx)(e.h2,{id:"network",children:"NETWORK"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Mostrar la IP de docker"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'ip a | grep docker\r\ndocker run -d nginx\r\ndocker inspect "nombre-proceso-nginx"\r\ndocker inspect "nombre-proceso-nginx" | less\n'})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Mostrar las redes de docker"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"docker network ls\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Crear una nueva red"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker network create test-network\r\n# Personalizada\r\ndocker network create -d bridge --subnet 172.20.10.0/24 --gateway 142.20.10.1 "nombre-red"\n'})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Crear un contenedor dentro de una red"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker run --network "docker-test-network" -d --name test3 "nombre-imagen"\r\n# Con IP personalizada\r\ndocker run --network "docker-test-network" --ip "IP" -d --name test3 "nombre-imagen"\n'})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Hacer ping de un contenedor a otro en la misma subnet"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker exec "nombre-contenedor" bash -c "ping "IP""\r\n# Con nombre solo para redes creadas por nosotros, NO se puede desde "bridge" (por defecto)\r\ndocker exec "nombre-contenedor" bash -c "ping "nombre-contenedor""\n'})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Conectar contenedores en distintas redes"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker network connect "nombre-red" "nombre-contenedor"\n'})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Desconectar contenedores en distintas redes"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker network disconnect "nombre-red" "nombre-contenedor"\n'})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Eliminar redes"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'# Se deben eliminar "antes" los contenedores de la misma\r\ndocker network rm\n'})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Conectar un contenedor a la red host"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"docker run -d --network host --name cont5 -ti debian\r\n# Este contenedor tendr\xe1 los mismos par\xe1metros de red que el host\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Contenedores SIN red - none"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"docker run --network none --name cont -d -ti debian\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:'Contenedor en red host con acceso solo desde "localhost'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"# Acceso desde localhost y IP local del host\r\ndocker run -d -p 8080:80 nginx\r\n# Acceso s\xf3lo desde localhost\r\ndocker run -d -p 127.0.0.1:8081:80 nginx\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"docker-compose",children:"DOCKER COMPOSE"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:'Crear un archivo "docker-compose.yml'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yml",children:'version: "3.8"\r\nservices:\r\n  web:\r\n    image: nginx\r\n    container_name: nginx1\r\n    ports:\r\n      - "8080:80"\r\n    environment:\r\n      - "MY_ENV=RUBENFGR"\r\n    #env_file: common.env (rear un archivo de claves/valor)\r\n    volumes:\r\n      - "vol2:/usr/share/nginx/html"\r\n    #volumes: (HOST)\r\n    #- \'$PWD/HTML:/usr/share/nginx/html\'\r\n    networks:\r\n      - net-test\r\n  web2:\r\n    image: nginx\r\n    container_name: nginx2\r\n    ports:\r\n      - "8081:80"\r\n    networks:\r\n      - net-test\r\nvolumes:\r\n  vol2:\r\nnetworks:\r\n  net-test:\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'# Iniciar el contenedor con docker-compose\r\ndocker-compose up -d\r\n# Iniciar especificando el archivo\r\ndocker-compose -f "my-file".yml up -d\r\n# Parar eliminar el contenedor creado\r\ndocker-compose down\n'})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Build docker-compose"})}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"Crear un Dockerfile"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"FROM debian\r\n\r\nRUN mkdir /opt/test\n"})}),"\n",(0,s.jsxs)(e.ol,{start:"2",children:["\n",(0,s.jsx)(e.li,{children:"Crear un docker-compose"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yml",children:'version: "3.8"\r\nservices:\r\n  web:\r\n    container_name: my-web\r\n    image: my-web-test\r\n    build: .\r\n    #build:\r\n    #context: .\r\n    #dockerfile: myDockerfile\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"3",children:["\n",(0,s.jsx)(e.li,{children:"Correr docker-compose"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"docker-compose build\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Sobreescribir el CMD de un contenedor en compose"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yml",children:'version: "3.8"\r\nservices:\r\n  web:\r\n    image: debian\r\n    command: python -m SimpleHTTPServer 8080\r\n    ports:\r\n      - "8080:8080"\n'})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Limitar los recursos"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yml",children:'version: "3.8"\r\nservices:\r\n  web:\r\n    container_name: my-nginx\r\n    mem_limit: 20m\r\n    cpuset: "0"\r\n    image: nginx\n'})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Reinicio autom\xe1tico del contenedor"})}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"Crear el docker-compose"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yml",children:'version: "3.8"\r\nservices:\r\n  web:\r\n    container_name: test\r\n    image: restart-image\r\n    build: .\r\n    restart:\r\n      always\r\n      # unless-stopped # Reinicio a menos que se detenga manualmente\r\n      # on-failure # Reinicio a pesar que falle internamente (error distinto de 0)\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"docker run -d --restart always --name my-test -p 8080:80 nginx\n"})}),"\n",(0,s.jsxs)(e.ol,{start:"2",children:["\n",(0,s.jsx)(e.li,{children:"Crear el Dockerfile"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"FROM debian\r\n\r\nCOPY start.sh /start.sh\r\n\r\nRUN chmod +x /start.sh\r\n\r\nCMD /start.sh\n"})}),"\n",(0,s.jsxs)(e.ol,{start:"3",children:["\n",(0,s.jsx)(e.li,{children:"Crear el .sh"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'#!/bin/bash\r\n\r\necho "Estoy vivo"\r\nsleep 5s\r\necho "Estoy detenido"\r\n# exit 1 (distinto de 0 para \'on-failure\')\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"4",children:["\n",(0,s.jsx)(e.li,{children:"Build, up and show logs & watch"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker-compose -f "file".yml build\r\ndocker-compose -f "file".yml up -d\r\ndocker logs "container-name"\r\nwatch docker ps\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"compose-wordpress",children:"Compose wordpress"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yml",children:'version: "3.8"\r\nservices:\r\n  db:\r\n    container_name: my-mysql\r\n    image: mysql:5.7\r\n    volumes:\r\n      - $PWD/data:/var/lib/mysql\r\n    environment:\r\n      MYSQL_ROOT_PASSWORD: 12345678\r\n      MYSQL_DATABASE: wordpress\r\n      MYSQL_USER: wordpress\r\n      MYSQL_PASSWORD: wordpress\r\n    ports:\r\n      - "3306:3306"\r\n    networks:\r\n      - my_net\r\n  wordpress:\r\n    container_name: wordpress\r\n    volumes:\r\n      - "#PWD/html:/var/www/html"\r\n    depends_on: # Primero se debe crear el container db\r\n      - db\r\n    image: wordpress\r\n    ports:\r\n      - "80:80"\r\n    environment:\r\n      WORDPRESS_DB_HOST: db:3306\r\n      WORDPRESS_DB_USER: wordpress\r\n      WORDPRESS_DB_PASSWORD: wordpress\r\n    networks:\r\n      - my_net\r\nnetworks:\r\n  my_test:\n'})}),"\n",(0,s.jsx)(e.h3,{id:"compose-drupal",children:"Compose Drupal"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yml",children:'version: "3.8"\r\nservices:\r\n  drupal:\r\n    volumes:\r\n      - drupal-html:/var/www/html\r\n    image: drupal:8-apache\r\n    ports:\r\n      - 80:80\r\n    networks:\r\n      - net\r\n  postgres:\r\n    image: postgres:10\r\n    environment:\r\n      POSTGRES_PASSWORD: drupal\r\n    volumes:\r\n      - $PWD/data:/var/lib/postgresql/data\r\n    networks:\r\n      - net\r\n  volumes:\r\n    drupal-html:\r\n  networks:\r\n    net:\n'})}),"\n",(0,s.jsx)(e.h3,{id:"compose-prestashop",children:"Compose Prestashop"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yml",children:'version: "3.8"\r\n\r\nservices:\r\n  db:\r\n    container_name: ps-mysql\r\n    image: mysql:5.7\r\n    volumes:\r\n      - $PWD/data:/var/lib/mysql\r\n    environment:\r\n      MYSQL_ROOT_PASSWORD: 12345678\r\n      MYSQL_DATABASE: ps\r\n      MYSQL_USER: ps\r\n      MYSQL_PASSWORD: ps\r\n    ports:\r\n      - "3306-3306"\r\n    networks:\r\n      - my_net\r\n  ps:\r\n    container_name: ps-web\r\n    volumes:\r\n      - "$PWD/html:/var/www/html"\r\n    depends_on:\r\n      - db\r\n    image: prestashop/prestashop\r\n    ports:\r\n      - "80:80"\r\n    environment:\r\n      DB_SERVER: db\r\n      DB_USER: ps\r\n      DB_PASSWD: ps\r\n      DB_NAME: ps\r\n    networks:\r\n      - my_net\r\nnetworks:\r\n  my_net:\n'})}),"\n",(0,s.jsx)(e.h3,{id:"compose-joomla",children:"Compose Joomla"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yml",children:'version: "3.8"\r\nservices:\r\n  joomla:\r\n    image: joomla\r\n    depends_on:\r\n      - mysql\r\n    ports:\r\n      - 8080:80\r\n    environment:\r\n      JOOMLA_DB_HOST: mysql\r\n      JOOMLA_DB_PASSWORD: example\r\n  mysql:\r\n    image: mysql:5.7\r\n    environment:\r\n      MYSQL_ROOT_PASSWORD: example\n'})}),"\n",(0,s.jsx)(e.h3,{id:"compose-react-e-commerce",children:"Compose React E-Commerce"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yml",children:'version: "3.8"\r\n\r\nservices:\r\n  reaction:\r\n    image: reactioncommerce/reaction\r\n    depends_on:\r\n      - mongo\r\n    ports:\r\n      - "3000:3000"\r\n    environment:\r\n      ROOT_URL: "http://localhost"\r\n      MONGO_URL: "mongodb://mongo:27017/reaction"\r\n    networks:\r\n      - net\r\n  mongo:\r\n    image: mongo\r\n    volumes:\r\n      - $PWD/data:/data/db\r\n    networks:\r\n      - net\r\nnetworks:\r\n  net:\n'})}),"\n",(0,s.jsx)(e.h3,{id:"compose-guacamole",children:"Compose Guacamole"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yml",children:'version: "3.8"\r\nservices:\r\n  db:\r\n    container_name: guacamole-db\r\n    networks:\r\n      - net\r\n    image: mysql:5.7\r\n    volumes:\r\n      - ./conf/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql\r\n      - ./data:/var/lib/mysql\r\n    env_file: .env\r\n  daemon:\r\n    container_name: guacamole-daemon\r\n    networks:\r\n      - net\r\n    image: guacamole/guacd\r\n    depends_on:\r\n      - db\r\n  web:\r\n    container_name: guacamole-web\r\n    networks:\r\n      - net\r\n    image: guacamole/guacamole\r\n    env_file: .env\r\n    depends_on:\r\n      - daemon\r\n  proxy:\r\n    container_name: guacamole-proxy\r\n    hostname: guacamole-proxy\r\n    networks:\r\n      - net\r\n    image: nginx\r\n    ports:\r\n      - "80:80"\r\n    restart: always\r\n    volumes:\r\n      - $PWD/conf/nginx.conf:/etc/nginx/nginx.conf\r\n    depends_on:\r\n      - web\r\nnetworks:\r\n  net:\r\n    driver: bridge\n'})}),"\n",(0,s.jsx)(e.h3,{id:"compose-zabbix",children:"Compose Zabbix"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yml",children:'version: \'3.8\'\r\nservices:\r\n   zabbix:\r\n      container_name: zabbix-web\r\n      image: zabbix\r\n      build: .\r\n      volumes:\r\n         - "$PWD/html:/usr/share/zabbix"\r\n      ports:\r\n         - "80:80"\r\n      networks:\r\n         - net\r\n   db:\r\n   container_name: zabbix-db\r\n   image: mysql: 5.7\r\n   environment:\r\n      MYSQL_ROOT_PASSWORD: 123456\r\n      MYSQL_USER: zabbix\r\n      MYSQL_PASSWORD: zabbix\r\n      MYSQL_DATABASE: zabbix\r\n   volumes:\r\n      - "$PWD/data:/var/lib/mysql"\r\n      - "$PWD/conf/create.sql:/docker-entrypoint-initdb.d/zabbit.sql" # carga el sql al inicio del contenedor\r\n   ports:\r\n      - "3306:3306"\r\n   networks:\r\n      - net\r\nnetworks:\r\n   net:\n'})}),"\n",(0,s.jsx)(e.h3,{id:"container-openssh-server",children:"Container openssh-server"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"FROM debian\r\n\r\nRUN yum -y install openssh-server sudo\r\n\r\nRUN useradd guacamole && /user/bin/ssh-keygen -A\r\n\r\nWORKDIR /home/guacamole\r\n\r\nCMD /usr/sbin/sshd -D\n"})}),"\n",(0,s.jsx)(e.h3,{id:"docker-registry",children:"Docker Registry"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Crear un registry local"})}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:'Crear un directorio "registry"'}),"\n",(0,s.jsx)(e.li,{children:"Correr un contenedor"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"docker run -d -p 5000:5000 --name registry -v $PWD/data:/var/lib/registry registry:2\n"})}),"\n",(0,s.jsxs)(e.ol,{start:"3",children:["\n",(0,s.jsx)(e.li,{children:"Tagear una imagen existente"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker tag "nombre-imagen-existente":"tag" "host":"puerto"/"nombre-imagen-registry":"tag-imagen-registry"\r\n# Example\r\ndocker tag hello-world:latest localhost:5000/hello-world:1.0\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"4",children:["\n",(0,s.jsx)(e.li,{children:"Eliminar imagenes"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker rmi "nombre-imagen"\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"5",children:["\n",(0,s.jsx)(e.li,{children:"Bajar la imagen desde el propio registry local"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:'docker pull "host":"port"/"imagen-name"\r\n# Example\r\ndocker pull localhost:5000/hello-world\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"otros",children:"Otros"}),"\n",(0,s.jsx)(e.h3,{id:"bash",children:"Bash"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Simular archivos"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"fallocate -l 10M /opt/file1"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"mysql",children:"MySQL"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Lanzar contenedor MySQL mapeando puerto, con nombre, root-pass, usuario y user-pass"}),"\r\n",(0,s.jsx)(e.code,{children:'docker run -d -p 3306:3306 --name "nombre-bd" -e "MYSQL_ROOT_PASSWORD="pw"" -e "MYSQL_DATABASE="nombre-bd"" -e "MYSQL_USER="nombre-usuario"" -e "MYSQL_PASSWORD="password-usuario" "nombre-imagen"[:"tag"]'})]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"errores",children:"Errores"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"Soluci\xf3n a resource temporarily unavailable"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Culpable: La funci\xf3n TasksMax Systemd / Linux"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Prerrequisitos"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"systemd debe ser mayor o igual a 227 (versi\xf3n 219 para RHEL)\r\nEl kernel de Linux debe ser superior o igual a 4.3 (versi\xf3n 3.10 para RHEL)\r\nLa salida de systemctl status docker | grep Tasksincluye unLimit\r\nEste problema fue resuelto por Docker EE 17.06.2-ee-7."}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Soluci\xf3n"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"sudo systemctl set-property docker.service TasksMax=infinity\r\nsudo systemctl daemon-reload\r\nsudo systemctl restart docker\n"})})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(t,{...n})}):t(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>i,x:()=>c});var s=r(6540);const o={},l=s.createContext(o);function i(n){const e=s.useContext(l);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:i(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);